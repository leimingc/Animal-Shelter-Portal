{"version":3,"sources":["components/stores/UserStore.js","components/loginComponents/InputField.js","components/loginComponents/SubmitButton.js","components/loginComponents/loginForm.js","components/Navigation.js","components/login.js","components/Home.js","components/Animals.js","components/TaskList.js","components/AddAnimal.js","components/EditAnimalDetail.js","components/EditVaccination.js","components/AnimalDetail.js","components/404.js","components/ProtectedRoute.js","components/VaccineReminder.js","components/MonthAdoptionReport.js","components/VolunteerLookup.js","components/VolunteerOfMonth.js","components/Adoption.js","components/AdoptionApplicationReview.js","components/AddAdoptionApplication.js","components/AnimalControlReport.js","App.js","serviceWorker.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","usertype","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","event","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","Navigation","history","push","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","to","NavDropdown","title","Item","Text","Button","variant","doLogout","Login","observer","Home","Animals","handleChangeSpecies","species","handleChangeAdopt","adoptability","animals","capacity","refreshList","then","response","data","catch","err","error","arr","comp","map","i","final","indexOf","filter","animal","uniqueSpecies","getUnique","filterDropdown","species_type","capcatiy","key","pet_ID","Table","striped","bordered","hover","size","pathname","animal_name","breed","sex","alteration_status","age","TaskList","taskList","idx","vac_type","admin_date","exp_date","vac_number","index","name","required","data-id","vaccinations","vaccine_name","add","delete","AddAnimal","snackbarClose","snackbaropen","handleTaskChange","includes","dataset","addNewRow","prevState","Math","random","deteteRow","s","sindex","snackbarmsg","breeds","selectedSpecies","addedBreeds","full","handleSubmit","bind","step","preventDefault","microchip_ID","description","surrender_reason","surrender_date","by_animal_control","user_name","request","Request","Headers","message","setTimeout","splice","record","r","vaccine","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","IconButton","arial-label","color","Form","onSubmit","style","marginTop","Group","controlId","Label","Control","as","speciesHandler","rows","handleChange","breed_name","handleRemove","addBreed","clickOnDelete","EditAnimalDetail","nextProps","item","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Row","Col","sm","defaultValue","sexHandler","microchipHandler","alterationHandler","Footer","onHide","EditVaccination","vaccinetypes","addedVac","petid","vac","AnimalDetail","vaccination","editModalShow","addVacShow","match","params","string","Date","toLocaleDateString","year","month","day","formatDate","ButtonToolbar","show","required_for_adoption","NotFoundPage","ProtectedRoute","component","rest","render","from","location","VaccineReminder","VacReminder","refreshlist","scope","Vaccine","recorder_last_time","recorder_first_time","MonthAdoptionReport","Report","R","adoption_count","surrender_count","VolunteerLookup","volresult","search_name","volresults","handleClick","vol","first_name","toUpperCase","last_name","toLowerCase","slice","searchName","v","email","Phone","VolunteerOfMonth","selectYearOnchange","selectedyear","selectMonthOnchange","selectedmonth","monthselected","years","months","volunteersyear","volunteersmonth","clickOnChange","handelselect","optionState","d","working_time","Adoption","handlechange","newadopt","newadd","appliLastNames","showMe","app_ID","adoption_date","adoption_fee","addAdoptionDnF","getApplicantInfoList","RevealForm","columns","accessor","sortable","textAlign","width","maxWidth","filterable","filterMethod","matchSorter","keys","filterAll","Cell","c","original","openSelectedName","defaultPageSize","AdoptionApplicationReview","applicationInfos","appID","getApplicationInfoList","app_id","onChangeReject","onChangeApprove","AddAdoptionApplication","appInfo","app_date","co_applicant_first_name","co_applicant_last_name","app_status","applicant_email","emailList","disabledapplicant","appIDlist","handleApplicationSubmit","handleApplicantSubmit","phone","city","street","zipcode","parseInt","max_ID","toString","onBlur","handleApplicantEmail","handleApplicantionEmail","AnimalControlReport","DateFrom","YearFrom","MonthFrom","FormAC","Form60","joinAC60OnMonth","showACMe","show60Me","hideMe","refreshList_60","refreshList_ac","getAnimalByAC60","columns_60","RevealACForm","Reveal60Form","App","exact","path","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qVAae,MAVX,aAAe,oBACXA,YAAiBC,KAAM,CACnBC,SAAS,EACTC,YAAY,EACZC,SAAU,GACVC,SAAU,M,QCWPC,E,uKAfH,IAAD,OACP,OACE,yBAAKC,UAAU,cACX,2BACEA,UAAU,QACVC,KAAMP,KAAKQ,MAAMD,KACjBE,YAAaT,KAAKQ,MAAMC,YACxBC,MAAOV,KAAKQ,MAAME,MAClBC,SAAU,SAACC,GAAD,OAAK,EAAKJ,MAAMG,SAASC,EAAEC,OAAOH,e,GAV/BI,IAAMC,WCiBhBC,E,uKAfH,IAAD,OACP,OACE,yBAAKV,UAAU,gBACX,4BACAA,UAAU,SACVW,SAAUjB,KAAKQ,MAAMS,SACrBC,QAAS,kBAAI,EAAKV,MAAMU,YAErBlB,KAAKQ,MAAMW,W,GAVGL,IAAMC,WCoGlBK,E,kDA/Fb,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAM,CACPlB,SAAS,GACTmB,SAAS,GACTC,gBAAgB,GALL,E,0DAULC,EAAUC,IACpBA,EAAMA,EAAIC,QACFC,OAAS,IAGjB3B,KAAK4B,SAAL,eACKJ,EAAUC,M,kCAIfzB,KAAK4B,SAAS,CACVzB,SAAS,GACTmB,SAAS,GACTC,gBAAe,M,uEAITM,G,4EACL7B,KAAKqB,MAAMlB,S,oDAGXH,KAAKqB,MAAMC,S,wDAGhBtB,KAAK4B,SAAS,CACVL,gBAAgB,I,kBAGFO,MAAM,8BAA+B,CACjDC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBhC,SAAUH,KAAKqB,MAAMlB,SACrBmB,SAAUtB,KAAKqB,MAAMC,a,cARzBc,E,iBAWeA,EAAIC,O,SAAnBC,E,SACUA,EAAOC,SACjBC,EAAUtC,YAAa,EACvBsC,EAAUrC,SAAWmC,EAAOnC,SAC5BqC,EAAUpC,SAAWkC,EAAOlC,UAGrBkC,IAA6B,IAAnBA,EAAOC,UACxBvC,KAAKyC,YACLC,MAAMJ,EAAOK,M,kDAGjBC,QAAQC,IAAR,MACA7C,KAAKyC,Y,gJAID,IAAD,OAIP,OACE,yBAAKnC,UAAU,aAAf,SAEI,kBAAC,EAAD,CACEC,KAAK,OACLE,YAAY,WACZC,MAAOV,KAAKqB,MAAMlB,SAAWH,KAAKqB,MAAMlB,SAAW,GACnDQ,SAAU,SAACc,GAAD,OAAS,EAAKqB,cAAc,WAAYrB,MAEpD,kBAAC,EAAD,CACElB,KAAK,WACLE,YAAY,WACZC,MAAOV,KAAKqB,MAAMC,SAAWtB,KAAKqB,MAAMC,SAAW,GACnDX,SAAU,SAACc,GAAD,OAAS,EAAKqB,cAAc,WAAYrB,MAEpD,kBAAC,EAAD,CACEN,KAAK,QACLF,SAAUjB,KAAKqB,MAAME,eACrBL,QAAS,SAACN,GAAD,OAAK,EAAKmC,QAAQnC,W,GAzFfE,IAAMC,W,mDCDjBiC,EAAb,kDACI,WAAYxC,GAAQ,uCACVA,GAFd,kMAM0BsB,MAAM,UAAW,CAC/BC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAV9B,cAMcI,EANd,gBAa6BA,EAAIC,OAbjC,QAacC,EAbd,SAcwBA,EAAOC,UACnBC,EAAUtC,YAAa,EACvBsC,EAAUrC,SAAW,GACrBqC,EAAUpC,SAAW,GAIrBJ,KAAKQ,MAAMyC,QAAQC,KAAK,MArBpC,kDAwBUN,QAAQC,IAAR,MAxBV,+IA4Bc,IAAD,OAEL,OACI,kBAACM,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,MACrB,kBAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,kBAACJ,EAAA,EAAOK,SAAR,CAAiBC,GAAG,oBACpB,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAASpD,UAAU,kCACnBqD,GAAG,SADH,QAEA,kBAAC,IAAD,CAASrD,UAAU,kCACnBqD,GAAG,YADH,qBAIqB,UAAvBnB,EAAUpC,SACZ,kBAACwD,EAAA,EAAD,CAAaC,MAAM,SAASJ,GAAG,sBAC3B,kBAACG,EAAA,EAAYE,KAAb,KAAkB,kBAAC,IAAD,CAASH,GAAG,oBAAZ,qBAClB,kBAACC,EAAA,EAAYE,KAAb,KAAkB,kBAAC,IAAD,CAASH,GAAG,oBAAZ,qBAClB,kBAACC,EAAA,EAAYE,KAAb,KAAkB,kBAAC,IAAD,CAASH,GAAG,qBAAZ,uBAClB,kBAACC,EAAA,EAAYE,KAAb,KAAkB,kBAAC,IAAD,CAASH,GAAG,wBAAZ,4BAClB,kBAACC,EAAA,EAAYE,KAAb,KAAkB,kBAAC,IAAD,CAASH,GAAG,wBAAZ,2BACL,MAIbnB,EAAUtC,WACV,kBAACiD,EAAA,EAAOK,SAAR,CAAiBlD,UAAU,uBACvB,kBAAC6C,EAAA,EAAOY,KAAR,CAAazD,UAAU,cAAvB,gBACkBkC,EAAUpC,SAD5B,KACwCoC,EAAUrC,UACnC,KACf,kBAAC6D,EAAA,EAAD,CAAQC,QAAQ,eAAe/C,QAAS,kBAAI,EAAKgD,aAAjD,YAEJ,kBAACf,EAAA,EAAOK,SAAR,CAAiBlD,UAAU,uBAC3B,kBAAC6C,EAAA,EAAOY,KAAR,CAAazD,UAAU,cAAvB,wBA5DpB,GAAgCS,aCG1BoD,G,oUAIgBrC,MAAM,cAAe,CACnCC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sB,cAJhBI,E,gBAOeA,EAAIC,O,QAAnBC,E,SACUA,EAAOC,SACnBC,EAAUvC,SAAU,EACpBuC,EAAUtC,YAAa,EACvBsC,EAAUrC,SAAWmC,EAAOnC,SAC5BqC,EAAUpC,SAAWkC,EAAOlC,WAE5BoC,EAAUvC,SAAU,EACpBuC,EAAUtC,YAAa,G,kDAGvBsC,EAAUvC,SAAU,EACpBuC,EAAUtC,YAAa,E,4RAMT4B,MAAM,UAAW,CAC/BC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sB,cAJhBI,E,gBAOeA,EAAIC,O,QAAnBC,E,SACUA,EAAOC,UACnBC,EAAUtC,YAAa,EACvBsC,EAAUrC,SAAW,GACrBqC,EAAUpC,SAAW,I,kDAGvBwC,QAAQC,IAAR,M,+IAKF,OAAIL,EAAUvC,QAEV,yBAAKK,UAAU,SACb,yBAAKA,UAAU,aAAf,4BAOAkC,EAAUtC,WAEV,kBAAC,IAAD,CAAUyD,GAAG,aAcf,yBAAKrD,UAAU,SACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBAEb,kBAAC,EAAD,Y,GA9EQQ,IAAMC,YAsFXqD,cAASD,GC3FXE,EAAb,uKAEQ,OACI,6BACI,kBAAC,EAAD,CAAYpB,QAASjD,KAAKQ,MAAMyC,UACpC,yBAAK3C,UAAU,oCAEX,kGAPhB,GAA0BS,a,SCIbuD,EAAb,kDACI,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IA6CV+D,oBAAsB,SAAA1C,GAClB,EAAKD,SAAS,CAAE4C,QAAS3C,EAAMhB,OAAOH,SA/CvB,EAkDnB+D,kBAAoB,SAAA5C,GAChB,EAAKD,SAAS,CAAE8C,aAAc7C,EAAMhB,OAAOH,SAjD3C,EAAKW,MAAQ,CAACsD,QAAQ,GAAIH,QAAQ,GAAII,SAAS,GAAIF,aAAa,IAFjD,EADvB,gEAQQ1E,KAAK6E,gBARb,oCAWmB,IAAD,OACVjC,QAAQC,IAAI,yBACZf,MAAM,qCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAAC+C,QAASI,EAASC,UAC9EC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,MAC5BpD,MAAM,kCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,GAAU,EAAKnD,SAAS,CAACgD,SAAUG,EAASC,UAC1EC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QApBpC,gCA+BcE,EAAKC,GAaX,OAZeD,EAEZE,KAAI,SAAA1E,GAAC,OAAIA,EAAEyE,MAGXC,KAAI,SAAC1E,EAAG2E,EAAGC,GAAP,OAAiBA,EAAMC,QAAQ7E,KAAO2E,GAAKA,KAG/CG,QAAO,SAAA9E,GAAC,OAAIwE,EAAIxE,MAEhB0E,KAAI,SAAA1E,GAAC,OAAIwE,EAAIxE,QA1CxB,+BAyDQgC,QAAQC,IAAI7C,KAAKqB,MAAMsE,QACvB,IAAMC,EAAgB5F,KAAK6F,UAAU7F,KAAKqB,MAAMsD,QAAS,gBAEnDA,EAAU3E,KAAKqB,MAAMsD,QACrBH,EAAUxE,KAAKqB,MAAMmD,QAGrBE,EAAe1E,KAAKqB,MAAMqD,aAC1BoB,EAAiBnB,EAAQe,QAAO,SAASpD,GAE3C,MAAgB,KAAZkC,GAA8B,QAAZA,EACG,KAAjBE,GAAwC,QAAjBA,EACQ,QAAxBpC,EAAOyD,cAAkD,QAAxBzD,EAAOyD,aACvB,cAAjBrB,EACyB,QAAxBpC,EAAOyD,cAAkD,cAAxBzD,EAAOoC,cAA0D,QAAxBpC,EAAOyD,cAAkD,cAAxBzD,EAAOoC,aAE1F,QAAxBpC,EAAOyD,cAAkD,kBAAxBzD,EAAOoC,cAA8D,QAAxBpC,EAAOyD,cAAkD,kBAAxBzD,EAAOoC,aAG7G,KAAjBA,GAAwC,QAAjBA,EAChBpC,EAAOyD,eAAiBvB,EACP,cAAjBE,EACApC,EAAOyD,eAAiBvB,GAAmC,cAAxBlC,EAAOoC,aAE1CpC,EAAOyD,eAAiBvB,GAAmC,kBAAxBlC,EAAOoC,gBAM7D,OACI,6BACI,wBAAIpE,UAAU,qCAAd,oBACA,kBAAC,EAAD,CACA2C,QAASjD,KAAKQ,MAAMyC,UAGpB,yBAAK3C,UAAU,OACdN,KAAKqB,MAAMuD,SAASU,KAAI,SAAAV,GAAQ,OAC7B,yBAAKtE,UAAU,OAEXsE,EAASoB,UAAY,EACrB,+BAAQpB,EAASmB,aAAjB,kBACA,+BAAQnB,EAASmB,aAAjB,gBAA4CnB,EAASoB,eAK7D,yBAAK1F,UAAU,OACf,yBAAKA,UAAU,OACf,gDAEI,4BACAK,SAAUX,KAAKuE,qBAEf,uCACCqB,EAAcN,KAAI,SAAAK,GAAM,OACrB,4BAAQM,IAAKN,EAAOO,OAAQxF,MAAOiF,EAAOI,cACzCJ,EAAOI,oBAMhB,yBAAKzF,UAAU,OACf,qDAEI,4BACAK,SAAUX,KAAKyE,mBAEf,uCACA,6CACA,mDAMJ,yBAAKnE,UAAU,YAEO,aAAtBkC,EAAUpC,SACV,yBAAKE,UAAU,QACf,kBAAC,IAAD,CAAMqD,GAAG,eACT,kBAACK,EAAA,EAAD,CAAQC,QAAQ,WAAhB,gBAIS,KAGa,aAAtBzB,EAAUpC,SACV,yBAAKE,UAAU,QACf,kBAAC,IAAD,CAAMqD,GAAG,aACT,kBAACK,EAAA,EAAD,CAAQC,QAAQ,WAAhB,kBAIQ,KAGR,kBAAC,IAAD,CAAMN,GAAG,2BACT,kBAACK,EAAA,EAAD,CAAQC,QAAQ,WAAhB,6BAKuB,UAAvBzB,EAAUpC,SACV,yBAAKE,UAAU,QACf,kBAAC,IAAD,CAAMqD,GAAG,8BACT,kBAACK,EAAA,EAAD,CAAQC,QAAQ,WAAhB,iCAIS,MAGb,kBAACkC,EAAA,EAAD,CAAO7F,UAAU,OAAO8F,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MAChD,+BACI,4BACI,6CACA,uCACA,qCACA,mCACA,iDACA,mCACA,qDAGR,+BACKT,EAAeR,KAAI,SAAAK,GAAM,OACtB,wBAAIM,IAAKN,EAAOO,QAChB,4BAAI,kBAAC,IAAD,CAAMvC,GAAI,CAAC6C,SAAS,WAAD,OAAab,EAAOO,QAAUlB,KAAMW,IAAUA,EAAOc,cAC5E,4BAAKd,EAAOI,cACZ,4BAAKJ,EAAOe,OACZ,4BAAKf,EAAOgB,KACZ,4BAAKhB,EAAOiB,mBACZ,4BAAKjB,EAAOkB,KACZ,4BAAKlB,EAAOjB,yBAlMpC,GAA6B3D,a,0CCmCd+F,EAzCE,SAACtG,GAChB,OACEA,EAAMuG,SAASzB,KAAI,SAAC7D,EAAKuF,GACvB,IAAIC,EAAQ,mBAAeD,GAAOE,EAAU,qBAAiBF,GAAOG,EAAQ,mBAAeH,GAAOI,EAAU,qBAAiBJ,GAC7H,OACE,wBAAIf,IAAKxE,EAAI4F,OACX,4BACE,4BAAQC,KAAK,WAAWC,UAAQ,EAAC9D,GAAIwD,EAAUO,UAASR,EAAK1G,UAAU,gBACrE,4BAAQ2F,IAAI,MACbzF,EAAMiH,aAAanC,KAAI,SAAA2B,GAAQ,OAC9B,4BAAQhB,IAAKgB,EAASS,cAAeT,EAASS,mBASlD,4BACE,2BAAOnH,KAAK,OAAQgH,UAAQ,EAACD,KAAK,aAAa7D,GAAIyD,EAAYM,UAASR,EAAK1G,UAAU,mBAEzF,4BACE,2BAAOC,KAAK,OAAQgH,UAAQ,EAACD,KAAK,WAAW7D,GAAI0D,EAAUK,UAASR,EAAK1G,UAAU,mBAErF,4BACE,2BAAOC,KAAK,OAAQ+G,KAAK,aAAaE,UAASR,EAAKvD,GAAI2D,EAAY9G,UAAU,mBAEhF,4BAKE,4BAAQY,QAAS,kBAAIV,EAAMmH,OAAOpH,KAAK,SAASD,UAAU,+BAA1D,OACA,4BAAQA,UAAU,iBAAiBY,QAAU,kBAAMV,EAAMoH,OAAOnG,KAAhE,gBC3BCoG,EAAb,kDACI,WAAYrH,GAAQ,IAAD,8BACf,cAAMA,IAkDVsH,cAAgB,SAACjG,GACb,EAAKD,SAAS,CAACmG,cAAc,KApDd,EAsInBC,iBAAmB,SAACpH,GACZ,CAAC,WAAY,aAAc,WAAY,cAAcqH,SAASrH,EAAEC,OAAOyG,MAC3D,YAAO,EAAKjG,MAAM0F,UACrBnG,EAAEC,OAAOqH,QAAQzE,IAAI7C,EAAEC,OAAOyG,MAAQ1G,EAAEC,OAAOH,MAExD,EAAKkB,SAAL,eAAiBhB,EAAEC,OAAOyG,KAAO1G,EAAEC,OAAOH,SA3I/B,EA8InByH,UAAY,SAACvH,GACT,EAAKgB,UAAS,SAACwG,GAAD,MAAgB,CAC1BrB,SAAS,GAAD,mBAAMqB,EAAUrB,UAAhB,CAA0B,CAAEM,MAAOgB,KAAKC,SAAUrB,SAAU,GAAIC,WAAY,GAAIC,SAAU,GAAIC,WAAY,WAhJvG,EAoJnBmB,UAAY,SAAClB,GACT,EAAKzF,SAAS,CACVmF,SAAU,EAAK1F,MAAM0F,SAASrB,QAAO,SAAC8C,EAAGC,GAAJ,OAAepB,IAAUoB,QAnJlE,EAAKpH,MAAQ,CACT0G,cAAc,EACdW,YAAY,GACZC,OAAO,GACPC,gBAAgB,MAChBC,YAAY,CAAC,IACbpB,aAAa,GACb7C,SAAS,GACTkE,MAAM,EACN/B,SAAU,CAAC,CAAEM,MAAOgB,KAAKC,SAAUrB,SAAU,GAAIC,WAAY,GAAIC,SAAU,GAAIC,WAAY,MAE/F,EAAK2B,aAAe,EAAKA,aAAaC,KAAlB,gBAdL,EADvB,gEAkByB,IAAD,OAChBlH,MAAM,gCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GACF,EAAKnD,SAAS,CAAC+G,OAAQ5D,EAASC,UAGnCC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,MAC5BpD,MAAM,qCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GACF,EAAKnD,SAAS,CAAC6F,aAAc1C,EAASC,UAGzCC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,MAC5BpD,MAAM,kCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,GAAU,EAAKnD,SAAS,CAACgD,SAAUG,EAASC,UAC1EC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QApCpC,qCAuCmBtE,GAGX,IAAK,IAAIqI,EAAO,EAAGA,EAAOjJ,KAAKqB,MAAMuD,SAASjD,OAAQsH,IAClD,GAAKjJ,KAAKqB,MAAMuD,SAASqE,GAAMlD,eAAiBnF,EAAEC,OAAOH,OAAWV,KAAKqB,MAAMuD,SAASqE,GAAMjD,UAAY,EAEtG,YADAhG,KAAK4B,SAAS,CAACkH,MAAM,EAAMf,cAAc,EAAMW,YAAY,4CAInE1I,KAAK4B,SAAS,CAACkH,MAAM,EAAOf,cAAc,EAAOa,gBAAiBhI,EAAEC,OAAOH,QAC3EkC,QAAQC,IAAIjC,EAAEC,OAAOH,SAjD7B,mCAwDiBmB,GAAQ,IAAD,OAChBA,EAAMqH,iBACN,IAAIP,EAAM,YAAO3I,KAAKqB,MAAMwH,aAC5BjG,QAAQC,IAAI8F,GACZ/F,QAAQC,IAAI7C,KAAKqB,MAAM0F,UACvB,IAAI/B,EAAO,CACPyB,YAAY5E,EAAMhB,OAAO4F,YAAY/F,MACrCyI,aAActH,EAAMhB,OAAOsI,aAAazI,MACxC0I,YAAavH,EAAMhB,OAAOuI,YAAY1I,MACtCkG,kBAA4D,QAAzC/E,EAAMhB,OAAO+F,kBAAkBlG,MAAkB,EAAI,EACxEiG,IAAK9E,EAAMhB,OAAO8F,IAAIjG,MACtBmG,IAAKhF,EAAMhB,OAAOgG,IAAInG,MACtB2I,iBAAkBxH,EAAMhB,OAAOwI,iBAAiB3I,MAChD4I,eAAgBzH,EAAMhB,OAAOyI,eAAe5I,MAC5C6I,kBAA4D,QAAzC1H,EAAMhB,OAAO0I,kBAAkB7I,MAAkB,EAAI,EACxE8I,UAAWhH,EAAUrC,SACrB4F,aAAclE,EAAMhB,OAAOkF,aAAarF,MACxCgG,MAAOiC,EACPlB,aAAczH,KAAKqB,MAAM0F,UAEvB0C,EAAU,IAAIC,QAAQ,uCAAwC,CAChE3H,OAAQ,OACRC,QAAS,IAAI2H,QAAQ,CAAC,OAAS,mBAAoB,eAAgB,qBACnE1H,KAAKC,KAAKC,UAAU6C,KAGtBpC,QAAQC,IAAIX,KAAKC,UAAU6C,IAG3BlD,MAAM2H,GACH3E,MAAK,SAAAC,GAAQ,OAAEA,EAAS1C,UACpByC,MAAK,SAAAE,GACJpC,QAAQC,IAAImC,GACZ,EAAKpD,SAAS,CAACmG,cAAc,EAAMW,YAAa1D,EAAK4E,QAAU,2CAA6C,WACxG5E,EAAK4E,SACPC,YAAW,WAAO,EAAKrJ,MAAMyC,QAAQC,KAAnB,kBAAmC8B,EAAK4E,YAAa,QAI3E,SAACzE,GAEG,EAAKvD,SAAS,CAACmG,cAAc,EAAMW,YAAa,gBAjGpE,gCAsGctD,EAAKC,GAaX,OAZeD,EAEZE,KAAI,SAAA1E,GAAC,OAAIA,EAAEyE,MAGXC,KAAI,SAAC1E,EAAG2E,EAAGC,GAAP,OAAiBA,EAAMC,QAAQ7E,KAAO2E,GAAKA,KAG/CG,QAAO,SAAA9E,GAAC,OAAIwE,EAAIxE,MAEhB0E,KAAI,SAAA1E,GAAC,OAAIwE,EAAIxE,QAjHxB,iCAsHQZ,KAAK4B,SAAS,CAACiH,YAAY,GAAD,mBAAM7I,KAAKqB,MAAMwH,aAAjB,CAA6B,SAtH/D,mCAyHiBjI,EAAGyG,GACZzE,QAAQC,IAAIwE,GACZrH,KAAKqB,MAAMwH,YAAYxB,GAASzG,EAAEC,OAAOH,MACzCV,KAAK4B,SAAS,CAACiH,YAAa7I,KAAKqB,MAAMwH,gBA5H/C,mCA+HiBxB,GACTzE,QAAQC,IAAIwE,GACZrH,KAAKqB,MAAMwH,YAAYiB,OAAOzC,EAAO,GACrCzE,QAAQC,IAAI7C,KAAKqB,MAAMwH,YAAa,QACpC7I,KAAK4B,SAAS,CAACiH,YAAa7I,KAAKqB,MAAMwH,cACvCjG,QAAQC,IAAI7C,KAAKqB,MAAMwH,eApI/B,oCA6JkBkB,GACV/J,KAAK4B,SAAS,CACVmF,SAAU/G,KAAKqB,MAAM0F,SAASrB,QAAO,SAAAsE,GAAC,OAAIA,IAAMD,SA/J5D,+BAmKc,IAAD,OACCnE,EAAgB5F,KAAK6F,UAAU7F,KAAKqB,MAAMsH,OAAQ,gBAElD5B,EAAa/G,KAAKqB,MAAlB0F,SACFvC,EAAUxE,KAAKqB,MAAMsH,OAAOjD,QAAO,SAAAlB,GACnC,OAAOA,EAAQuB,eAAiB,EAAK1E,MAAMuH,mBAE3CqB,EAAUjK,KAAKqB,MAAMoG,aAAa/B,QAAO,SAAAlB,GACzC,OAAOA,EAAQuB,eAAiB,EAAK1E,MAAMuH,mBAG/C,OADAhG,QAAQC,IAAIoH,GAER,yBAAK3J,UAAU,aACX,kBAAC4J,EAAA,EAAD,CACIC,aAAc,CAACC,SAAS,SAAUC,WAAY,UAC9CC,KAAMtK,KAAKqB,MAAM0G,aACjBwC,iBAAoB,IACpBC,QAASxK,KAAK8H,cAEd8B,QAAS,0BAAMnG,GAAG,cAAczD,KAAKqB,MAAMqH,aAC3C+B,OAAQ,CACJ,kBAACC,EAAA,EAAD,CAAYzE,IAAI,QAAQ0E,cAAY,QAAQC,MAAM,UAAU1J,QAASlB,KAAK8H,eAA1E,QAKR,kBAAC,EAAD,CAAY7E,QAASjD,KAAKQ,MAAMyC,UAChC,kBAAC4H,EAAA,EAAD,CAAMC,SAAU9K,KAAK+I,cACrB,yBAAKzI,UAAU,MAAMyK,MAAO,CAAEC,UAAW,KACzC,yBAAK1K,UAAU,aACf,yBAAKA,UAAU,YACf,wBAAIA,UAAU,qCAAd,kBACQ,kBAACuK,EAAA,EAAKI,MAAN,CAAYC,UAAU,gBACtB,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAG,SAAS1K,SAAU,SAACC,GAAD,OAAO,EAAK0K,eAAe1K,KAC3D,iCACCgF,EAAcN,KAAI,SAAAoB,GAAK,OACxB,gCACCA,EAAMX,kBAIP/F,KAAKqB,MAAMyH,KACP,kBAAC+B,EAAA,EAAK9G,KAAN,CAAWzD,UAAU,eAArB,8CAEU,QAI1B,8BAAUW,SAAUjB,KAAKqB,MAAMyH,KAAK,WAAW,MAC/C,yBAAKxI,UAAU,MAAMyK,MAAO,CAAEC,UAAW,KACzC,yBAAK1K,UAAU,aACf,yBAAKA,UAAU,YACX,kBAACuK,EAAA,EAAKI,MAAN,CAAYC,UAAU,eAClB,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,iBAEnD,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,gBAClB,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOE,YAAY,kBAE1C,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,eAClB,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAG,WAAW9D,UAAQ,EAACgE,KAAK,OAE9C,kBAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBAClB,kBAACL,EAAA,EAAKM,MAAN,0BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAG,UACb,uCACA,wCAGR,kBAACR,EAAA,EAAKI,MAAN,CAAYC,UAAU,OAClB,kBAACL,EAAA,EAAKM,MAAN,YACA,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAG,UACb,wCACA,0CACA,6CAGR,kBAACR,EAAA,EAAKI,MAAN,CAAYC,UAAU,OAClB,kBAACL,EAAA,EAAKM,MAAN,YACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,SAEnD,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBAClB,kBAACL,EAAA,EAAKM,MAAN,yBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,sBAEnD,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,kBAClB,kBAACL,EAAA,EAAKM,MAAN,uBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,cAEnD,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBAClB,kBAACL,EAAA,EAAKM,MAAN,+BACA,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAG,UACb,uCACA,wCAGR,kBAACR,EAAA,EAAKI,MAAN,CAAYC,UAAU,UAClB,kBAACL,EAAA,EAAKM,MAAN,eAQGnL,KAAKqB,MAAMwH,YAAYvD,KAAI,SAACoB,EAAOW,GAC/B,OACC,yBAAKpB,IAAKoB,GACV,kBAACwD,EAAA,EAAKO,QAAN,CAAcC,GAAG,SAAS1K,SAAU,SAACC,GAAD,OAAK,EAAK4K,aAAa5K,EAAGyG,KAC9D,4BAAQpB,IAAI,MACXzB,EAAQc,KAAI,SAAAoB,GAAK,OACd,4BAAQT,IAAKS,EAAM+E,YAAa/E,EAAM+E,gBAG1C,kBAACzH,EAAA,EAAD,CAAQC,QAAQ,SACZhD,UAAWoG,EACXnG,QAAS,kBAAI,EAAKwK,aAAarE,KAFnC,cAOR,kBAACrD,EAAA,EAAD,CAAQC,QAAQ,kBAAkB/C,QAAS,SAACN,GAAD,OAAK,EAAK+K,SAAS/K,KAA9D,gBAOJ,kBAACiK,EAAA,EAAKI,MAAN,CAAYtK,SAAUX,KAAKgI,kBAC3B,yBAAK1H,UAAU,MAAMyK,MAAO,CAAEC,UAAW,KACrC,yBAAK1K,UAAU,aACf,yBAAKA,UAAU,aAEP,yBAAKA,UAAU,2BAAf,oBACA,yBAAKA,UAAU,aAEX,2BAAOA,UAAU,SACb,+BACI,4BACI,wBAAIA,UAAU,YAAd,oBACA,wBAAIA,UAAU,YAAd,uBACA,+CACA,oDAGR,+BACI,kBAAC,EAAD,CAAUqH,IAAK3H,KAAKmI,UAAWP,OAAQ5H,KAAK4L,cAAc5C,KAAKhJ,MAAOyH,aAAcwC,EAASlD,SAAUA,UAsB/H,kBAAC/C,EAAA,EAAD,CAAQC,QAAQ,UAAU1D,KAAK,UAA/B,iBA9UpB,GAA+BQ,a,oCCHlB8K,EAAb,kDACI,WAAYrL,GAAQ,IAAD,8BACf,cAAMA,IAiBVsH,cAAgB,SAACjG,GACb,EAAKD,SAAS,CAACmG,cAAc,KAjB7B,EAAK1G,MAAQ,CAAC0G,cAAc,EAAOW,YAAY,GAAIS,aAAa,GAAIvC,kBAAkB,GAAID,IAAI,GAAID,MAAM,GACxGiC,OAAO,GACPC,gBAAgB,GAChBC,YAAY,IACZ,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBANL,EADvB,gEASyB,IAAD,OAChBlH,MAAM,gCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GACF,EAAKnD,SAAS,CAAC+G,OAAQ5D,EAASC,UAGnCC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QAhBpC,gDAuB8B4G,GACtB9L,KAAK4B,SAAS,CAACuH,aAAc2C,EAAU3C,aAAcvC,kBAAmBkF,EAAUlF,kBAAmBD,IAAKmF,EAAUnF,IAAKD,MAAMoF,EAAUpF,MAAOkC,gBAAgBkD,EAAUnG,OAAOI,eACjL/F,KAAKqB,MAAMwH,YAAY,GAAKiD,EAAUpF,MACtC1G,KAAK4B,SAAS,CAACiH,YAAa7I,KAAKqB,MAAMwH,gBA1B/C,uCA6BqBjI,GACbZ,KAAK4B,SAAS,CAACuH,aAAcvI,EAAEC,OAAOH,UA9B9C,iCAgCeE,GACPZ,KAAK4B,SAAS,CAAC+E,IAAK/F,EAAEC,OAAOH,UAjCrC,wCAmCsBE,GACdZ,KAAK4B,SAAS,CAACgF,kBAAmBhG,EAAEC,OAAOH,UApCnD,mCAsCiBE,GACTZ,KAAK4B,SAAS,CAAC8E,MAAO9F,EAAEC,OAAOH,UAvCvC,mCA0CiBmB,GAAQ,IAAD,OAChBA,EAAMqH,iBACN,IAAM6C,EAAO/L,KAAKqB,MAClBuB,QAAQC,IAAIkJ,GAEZ,IAAI/G,EAAO,CACPkB,OAAQlG,KAAKQ,MAAMmF,OAAOO,OAC1BiD,aAActH,EAAMhB,OAAOsI,aAAazI,MACxCkG,kBAAmB/E,EAAMhB,OAAO+F,kBAAkBlG,MAClDiG,IAAK9E,EAAMhB,OAAO8F,IAAIjG,MACtBgG,MAAO1G,KAAKqB,MAAMwH,YAClB9C,aAAc/F,KAAKQ,MAAMmF,OAAOI,cAE9B0D,EAAU,IAAIC,QAAQ,qCAAsC,CAC9D3H,OAAQ,MACRC,QAAS,IAAI2H,QAAQ,CAAC,OAAS,mBAAoB,eAAgB,qBACnE1H,KAAKC,KAAKC,UAAU6C,KAEtBpC,QAAQC,IAAIX,KAAKC,UAAU6C,IAE3BlD,MAAM2H,GACH3E,MAAK,SAAAC,GAAQ,OAAEA,EAAS1C,UACpByC,MAAK,SAAAE,GAGJ,EAAKpD,SAAS,CAACmG,cAAc,EAAMW,YAAa1D,EAAK4E,QAAU5E,EAAK4E,QAAU,cAEhF,SAACzE,GAEG,EAAKvD,SAAS,CAACmG,cAAc,EAAMW,YAAa,gBAvEpE,iCA4EQ1I,KAAK4B,SAAS,CAACiH,YAAY,GAAD,mBAAM7I,KAAKqB,MAAMwH,aAAjB,CAA6B,SA5E/D,mCA8EiBjI,EAAGyG,GACZzE,QAAQC,IAAIwE,GACZrH,KAAKqB,MAAMwH,YAAYxB,GAASzG,EAAEC,OAAOH,MACzCV,KAAK4B,SAAS,CAACiH,YAAa7I,KAAKqB,MAAMwH,gBAjF/C,mCAoFiBxB,GACTzE,QAAQC,IAAIwE,GACZrH,KAAKqB,MAAMwH,YAAYiB,OAAOzC,EAAO,GACrCzE,QAAQC,IAAI7C,KAAKqB,MAAMwH,YAAa,QACpC7I,KAAK4B,SAAS,CAACiH,YAAa7I,KAAKqB,MAAMwH,cACvCjG,QAAQC,IAAI7C,KAAKqB,MAAMwH,eAzF/B,+BA4Fc,IAAD,OACDrE,EAAUxE,KAAKqB,MAAMsH,OAAOjD,QAAO,SAAAlB,GACnC,OAAOA,EAAQuB,eAAiB,EAAK1E,MAAMuH,mBAK/C,OACI,yBAAKtI,UAAU,aACX,kBAAC4J,EAAA,EAAD,CACIC,aAAc,CAACC,SAAS,SAAUC,WAAY,UAC9CC,KAAMtK,KAAKqB,MAAM0G,aACjBwC,iBAAoB,IACpBC,QAASxK,KAAK8H,cAEd8B,QAAS,0BAAMnG,GAAG,cAAczD,KAAKqB,MAAMqH,aAC3C+B,OAAQ,CACJ,kBAACC,EAAA,EAAD,CAAYzE,IAAI,QAAQ0E,cAAY,QAAQC,MAAM,UAAU1J,QAASlB,KAAK8H,eAA1E,QAKZ,kBAACkE,EAAA,EAAD,iBACQhM,KAAKQ,MADb,CAEI+F,KAAK,KACL0F,kBAAgB,gCAChBC,UAAQ,IAER,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,CAAa5I,GAAG,iCAAhB,gBAIJ,kBAACuI,EAAA,EAAMM,KAAP,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC5B,EAAA,EAAD,CAAMC,SAAU9K,KAAK+I,cACrB,kBAAC8B,EAAA,EAAKI,MAAN,CAAYC,UAAU,UAClB,kBAACL,EAAA,EAAKM,MAAN,eAEuB,YAArBnL,KAAKQ,MAAMkG,OAA8C,UAArB1G,KAAKQ,MAAMkG,MACjD,kBAACmE,EAAA,EAAKO,QAAN,CACI7K,KAAK,OACL+G,KAAK,QACLC,UAAQ,EACRmF,aAAgB1M,KAAKQ,MAAMkG,MAC3BjG,YAAY,QACZQ,SAAgC,YAArBjB,KAAKQ,MAAMkG,OAA8C,UAArB1G,KAAKQ,MAAMkG,QAI9D1G,KAAKqB,MAAMwH,YAAYvD,KAAI,SAACoB,EAAOW,GAC/B,OACI,yBAAKpB,IAAKoB,GACV,kBAACwD,EAAA,EAAKO,QAAN,CAAcC,GAAG,SACjBpK,SAAgC,YAArB,EAAKT,MAAMkG,OAA8C,UAArB,EAAKlG,MAAMkG,MAC1DgG,aAAc,EAAKlM,MAAMkG,MACzB/F,SAAU,SAACC,GAAD,OAAK,EAAK4K,aAAa5K,EAAGyG,KACnC7C,EAAQc,KAAI,SAAAoB,GAAK,OACd,4BAAQT,IAAKS,EAAM+E,YAAa/E,EAAM+E,gBAG1C,kBAACzH,EAAA,EAAD,CAAQC,QAAQ,iBAAiB/C,QAAS,kBAAI,EAAKwK,aAAarE,KAAhE,eAOZ,kBAACrD,EAAA,EAAD,CAAQC,QAAQ,UAAUhD,SAAgC,YAArBjB,KAAKQ,MAAMkG,OAA8C,UAArB1G,KAAKQ,MAAMkG,MAAoBxF,QAAS,SAACN,GAAD,OAAK,EAAK+K,SAAS/K,KAApI,aAII,kBAACiK,EAAA,EAAKI,MAAN,CAAYC,UAAU,OACtB,kBAACL,EAAA,EAAKM,MAAN,YACA,kBAACN,EAAA,EAAKO,QAAN,CACIC,GAAG,SACH/D,KAAK,MACLC,UAAQ,EACRmF,aAAgB1M,KAAKQ,MAAMmG,IAC3BlG,YAAY,MACZQ,SAA6B,YAAnBjB,KAAKQ,MAAMmG,KAAuC,WAAlB3G,KAAKQ,MAAMmG,IACrDhG,SAAU,SAACC,GAAD,OAAO,EAAK+L,WAAW/L,KAEjC,2CACA,wCACA,4CAGJ,kBAACiK,EAAA,EAAKI,MAAN,CAAYC,UAAU,gBACtB,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CACI7K,KAAK,OACL+G,KAAK,eACLoF,aAAgB1M,KAAKQ,MAAM2I,aAC3B1I,YAAY,eACZE,SAAU,SAACC,GAAD,OAAO,EAAKgM,iBAAiBhM,OAI3C,kBAACiK,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBACtB,kBAACL,EAAA,EAAKM,MAAN,0BACA,kBAACN,EAAA,EAAKO,QAAN,CACI7K,KAAK,OACL+G,KAAK,oBACLC,UAAQ,EACRmF,aAAgB1M,KAAKQ,MAAMoG,kBAC3BnG,YAAY,oBACZQ,SAA2C,IAAjCjB,KAAKQ,MAAMoG,kBACrBjG,SAAU,SAACC,GAAD,OAAO,EAAKiM,kBAAkBjM,OAG5C,kBAACiK,EAAA,EAAKI,MAAN,KACI,kBAACjH,EAAA,EAAD,CAAQC,QAAQ,UAAU1D,KAAK,UAA/B,2BAMpB,kBAACyL,EAAA,EAAMc,OAAP,KACI,kBAAC9I,EAAA,EAAD,CAAQC,QAAQ,SAAS/C,QAASlB,KAAKQ,MAAMuM,QAA7C,gBApNpB,GAAsChM,aCCzBiM,EAAb,kDACI,WAAYxM,GAAQ,IAAD,8BACf,cAAMA,IAUVsH,cAAgB,SAACjG,GACb,EAAKD,SAAS,CAACmG,cAAc,KAV7B,EAAK1G,MAAQ,CAAC0G,cAAc,EAAOW,YAAY,GAC/CuE,aAAa,GACb/G,OAAQ,GACR0C,gBAAgB,GAChBsE,SAAS,IACT,EAAKnE,aAAe,EAAKA,aAAaC,KAAlB,gBAPL,EADvB,mHAgB8B8C,GAAY,IAAD,OACjC9L,KAAK4B,SAAS,CAACgH,gBAAgBkD,EAAUlD,gBAAiB1C,OAAO4F,EAAU5F,SAD1C,IAE5BiH,EAASrB,EAAU5F,OAAnBiH,MACLvK,QAAQC,IAAI,aAAesK,GAC3BrL,MAAM,yBAAD,OAA0BqL,EAA1B,iBACJrI,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GACF,EAAKnD,SAAS,CAACqL,aAAclI,EAASC,UAGzCC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QA1BpC,mCA6BiBtE,GACTZ,KAAK4B,SAAS,CAACsL,SAAUtM,EAAEC,OAAOH,UA9B1C,mCAiCiBmB,GAAQ,IAAD,OAGhBA,EAAMqH,iBACN,IAAIlE,EAAO,CACPkB,OAAQlG,KAAKqB,MAAM6E,OAAOiH,MAC1BlG,SAAUpF,EAAMhB,OAAOoG,SAASvG,MAChCwG,WAAYrF,EAAMhB,OAAOqG,WAAWxG,MACpC0G,WAAYvF,EAAMhB,OAAOuG,WAAW1G,MACpCyG,SAAUtF,EAAMhB,OAAOsG,SAASzG,MAChC8I,UAAWhH,EAAUrC,UAEnBsJ,EAAU,IAAIC,QAAQ,0CAA2C,CACnE3H,OAAQ,OACRC,QAAS,IAAI2H,QAAQ,CAAC,OAAS,mBAAoB,eAAgB,qBACnE1H,KAAKC,KAAKC,UAAU6C,KAEtBpC,QAAQC,IAAIX,KAAKC,UAAU6C,IAE3BlD,MAAM2H,GACH3E,MAAK,SAAAC,GAAQ,OAAEA,EAAS1C,UACpByC,MAAK,SAAAE,GAGJ,EAAKpD,SAAS,CAACmG,cAAc,EAAMW,YAAa1D,EAAK4E,QAAU5E,EAAK4E,QAAU,cAEhF,SAACzE,GAEG,EAAKvD,SAAS,CAACmG,cAAc,EAAMW,YAAa,gBA7DpE,+BAkEc,IAAD,OACL9F,QAAQC,IAAI7C,KAAKqB,MAAM4L,cACvB,IAAIzI,EAAUxE,KAAKqB,MAAM4L,aAAavH,QAAO,SAAAuE,GACzC,OAAOA,EAAQlE,eAAiB,EAAK1E,MAAMuH,mBAI/C,OAFAhG,QAAQC,IAAI2B,GACZ5B,QAAQC,IAAI7C,KAAKqB,MAAMuH,iBAEnB,yBAAKtI,UAAU,aACX,kBAAC4J,EAAA,EAAD,CACIC,aAAc,CAACC,SAAS,SAAUC,WAAY,UAC9CC,KAAMtK,KAAKqB,MAAM0G,aACjBwC,iBAAoB,IACpBC,QAASxK,KAAK8H,cAEd8B,QAAS,0BAAMnG,GAAG,cAAczD,KAAKqB,MAAMqH,aAC3C+B,OAAQ,CACJ,kBAACC,EAAA,EAAD,CAAYzE,IAAI,QAAQ0E,cAAY,QAAQC,MAAM,UAAU1J,QAASlB,KAAK8H,eAA1E,QAKZ,kBAACkE,EAAA,EAAD,iBACQhM,KAAKQ,MADb,CAEI+F,KAAK,KACL0F,kBAAgB,gCAChBC,UAAQ,IAER,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,CAAa5I,GAAG,iCAAhB,gBAIJ,kBAACuI,EAAA,EAAMM,KAAP,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC5B,EAAA,EAAD,CAAMC,SAAU9K,KAAK+I,cACjB,kBAAC8B,EAAA,EAAKI,MAAN,CAAYC,UAAU,gBAClB,kBAACL,EAAA,EAAKM,MAAN,oBACI,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAG,SACjB/D,KAAK,WACLC,UAAQ,EACR5G,SAAU,SAACC,GAAD,OAAK,EAAK4K,aAAa5K,KAChC4D,EAAQc,KAAI,SAAC8H,EAAI/F,GAAL,OACT,4BAAQpB,IAAKoB,GAAQ+F,EAAI1F,mBAKrC,kBAACmD,EAAA,EAAKI,MAAN,CAAYC,UAAU,cACtB,kBAACL,EAAA,EAAKM,MAAN,2BACA,kBAACN,EAAA,EAAKO,QAAN,CACI7K,KAAK,OACL+G,KAAK,aACL7G,YAAY,wBAGhB,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAClB,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,cAEnD,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,YAClB,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,cAEnD,kBAACoK,EAAA,EAAKI,MAAN,KACI,kBAACjH,EAAA,EAAD,CAAQC,QAAQ,UAAU1D,KAAK,UAA/B,wBAMpB,kBAACyL,EAAA,EAAMc,OAAP,KACI,kBAAC9I,EAAA,EAAD,CAAQC,QAAQ,SAAS/C,QAASlB,KAAKQ,MAAMuM,QAA7C,gBA3IpB,GAAqChM,aCCxBsM,EAAb,kDAEI,WAAY7M,GAAQ,IAAD,8BACf,cAAMA,IAEDa,MAAQ,CAGTsE,OAAQ,GACR2H,YAAY,GACZC,eAAe,EACfC,YAAY,GATD,EAFvB,gEAgBQxN,KAAK6E,gBAhBb,oCAkBmB,IAAD,OACLsI,EAASnN,KAAKQ,MAAMiN,MAAMC,OAA1BP,MACLvK,QAAQC,IAAI,YAAcsK,GAC1BrL,MAAM,gCAAD,OAAiCqL,IACrCrI,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAAC+D,OAAQZ,EAASC,KAAK,QAClFC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,MAC5BpD,MAAM,gCAAD,OAAiCqL,EAAjC,iBACJrI,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAAC0L,YAAavI,EAASC,UAClFC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QA5BpC,iCA+BeyI,GAEP,OAAO,IAAIC,KAAKD,GAAQE,mBAAmB,GAD7B,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,cAhC7D,+BAoCc,IAAD,SAG0FhO,KAAKqB,MAA/FsE,EAHA,EAGAA,OAAQ2H,EAHR,EAGQA,YAAa5G,EAHrB,EAGqBA,MAAOC,EAH5B,EAG4BA,IAAKwC,EAHjC,EAGiCA,aAAcvC,EAH/C,EAG+CA,kBAA2Bb,GAH1E,EAGkEG,OAHlE,EAG0EH,cAC/EnD,QAAQC,IAAI,CAAC8C,WAEb/C,QAAQC,IAAI7C,KAAKqB,MAAMkM,eAGvB,OACI,6BACI,kBAAC,EAAD,CAAYtK,QAASjD,KAAKQ,MAAMyC,UAChC,wBAAI3C,UAAU,qCAAd,iBACJ,kBAAC6F,EAAA,EAAD,CAAO7F,UAAU,OAAO8F,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MAChD,+BACI,4BACI,sCACA,4BAAKZ,EAAOO,SAEhB,4BACI,2CACA,4BAAKP,EAAOc,cAEhB,4BACI,4CACA,4BAAKd,EAAOwD,eAEhB,4BACI,2CACA,4BAAKxD,EAAOyD,cAEhB,4BACI,iDACA,4BAAKzD,EAAOiB,oBAEhB,4BACI,mCACA,4BAAKjB,EAAOgB,MAEhB,4BACI,mCACA,4BAAKhB,EAAOkB,MAEhB,4BACI,gDACA,4BAAKlB,EAAO0D,mBAEhB,4BACI,8CACA,4BAAKrJ,KAAKiO,WAAWtI,EAAO2D,kBAEhC,4BACI,iDACA,4BAAK3D,EAAO4D,oBAEhB,4BACI,wCACA,4BAAK5D,EAAO6D,YAEhB,4BACI,4CACA,4BAAK7D,EAAOI,eAEhB,4BACI,qCACA,4BAAKJ,EAAOe,UAIxB,kBAACwH,EAAA,EAAD,KACI,kBAAClK,EAAA,EAAD,CACA1D,UAAU,OAAO2D,QAAQ,UACzB/C,QAAS,WACL,EAAKU,SAAS,CAAC2L,eAAe,EAAM7G,MAAOf,EAAOe,MAAOC,IAAKhB,EAAOgB,IAAKwC,aAAcxD,EAAOwD,aAAcvC,kBAAmBjB,EAAOiB,sBAH3I,eAQA,kBAAC,EAAD,CACIuH,KAAQnO,KAAKqB,MAAMkM,cACnBR,OAzES,WAAM,EAAKnL,SAAS,CAAC2L,eAAe,IAAS,EAAK1I,eA0E3D6B,MAASA,EACTC,IAAOA,EACPwC,aAAgBA,EAChBvC,kBAAqBA,EACrBjB,OAAUA,KAIlB,kBAACQ,EAAA,EAAD,CAAO7F,UAAU,OAAO8F,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MAChD,+BACI,4BACI,gDACA,kDACA,0CACA,+CACA,qDACA,8CAGR,+BACK+G,EAAYhI,KAAI,SAAC8H,EAAK/F,GAAN,OACb,wBAAIpB,IAAKoB,GACT,4BAAK+F,EAAInG,UACT,4BAAKmG,EAAIhG,YACT,4BAAK,EAAK6G,WAAWb,EAAIlG,aACzB,4BAAK,EAAK+G,WAAWb,EAAIjG,WACxBiG,EAAIgB,sBAAwB,mCAAe,kCAC5C,4BAAKhB,EAAI5D,iBAKrB,kBAAC0E,EAAA,EAAD,KACI,kBAAClK,EAAA,EAAD,CACAC,QAAQ,UACR/C,QAAS,kBAAI,EAAKU,SAAS,CAAC4L,YAAY,EAAMtH,OAAQP,EAAOO,OAAQH,aAAcJ,EAAOI,iBAF1F,mBAIA,kBAAC,EAAD,CACAoI,KAAMnO,KAAKqB,MAAMmM,WACjBT,OAhHU,WAAM,EAAKnL,SAAS,CAAC4L,YAAY,IAAS,EAAK3I,eAiHzDqB,OAAQlG,KAAKQ,MAAMiN,MAAMC,OACzB9E,gBAAmB7C,UA9JnC,GAAkChF,aCKnBsN,EATM,WACjB,OACI,6BACI,kBAAC,EAAD,CAAYpL,c,GAAczC,MAAMyC,UAChC,gD,SCFCqL,EAAiB,SAAC,GAAqC,IAAzBvN,EAAwB,EAAnCwN,UAAyBC,EAAU,6BAE/D,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAjO,GACJ,OAA6B,IAAzBgC,EAAUtC,WACH,kBAACa,EAAcP,IAEtBkC,MAAM,wBACE,kBAAC,IAAD,CAAUiB,GACd,CACI6C,SAAU,IACVnF,MAAO,CACHqN,KAAMlO,EAAMmO,mBCb/BC,EAAb,kDACI,WAAYpO,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAQ,CACTwN,YAAa,IAHH,EADtB,gEASE7O,KAAK8O,gBATP,oCAYiB,IAAD,OACZlM,QAAQC,IAAI,yBACE,IAAI6G,QAAQ,gBAC5B5H,MAAM,qCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAACiN,YAAY9J,EAASC,UAClFC,OAAM,SAAAC,GAAG,OAAGtC,QAAQuC,MAAMD,QAlB5B,+BAsBQ,OACI,0BAAM5E,UAAU,kBACZ,wBAAIA,UAAU,4BAAd,2BACZ,kBAAC,EAAD,CAAY2C,QAASjD,KAAKQ,MAAMyC,UAChC,6BACC,kBAAC,IAAD,CAAMU,GAAG,YACT,kBAACK,EAAA,EAAD,CAAQC,QAAQ,WAAhB,8BAKW,kBAACkC,EAAA,EAAD,CAAO7F,UAAU,OAAO8F,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACnD,+BACX,4BACA,wBAAIwI,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,sBACA,wBAAIA,MAAM,OAAV,uBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,OACA,wBAAIA,MAAM,OAAV,qBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,oBAGU,+BACV/O,KAAKqB,MAAMwN,YAAYvJ,KAAI,SAAA0J,GAC5B,OACC,wBAAI/I,IAAOoC,KAAKC,UAChB,4BAAK0G,EAAQ9I,QACb,4BAAK8I,EAAQ/H,UACb,4BAAK+H,EAAQ7H,UACb,4BAAK6H,EAAQC,oBACb,4BAAKD,EAAQE,qBACb,4BAAKF,EAAQjJ,cACb,4BAAKiJ,EAAQtI,OACb,4BAAKsI,EAAQrI,KACb,4BAAKqI,EAAQpI,mBACb,4BAAKoI,EAAQ7F,cACb,4BAAK6F,EAAQ1F,2BA/DnB,GAAqCvI,aCExBoO,EAAb,kDACI,WAAY3O,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAQ,CACT+N,OAAQ,IAHE,EADtB,gEASEpP,KAAK8O,gBATP,oCAYiB,IAAD,OACZlM,QAAQC,IAAI,yBACE,IAAI6G,QAAQ,0CAC5B5H,MAAM,0CACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAACwN,OAAOrK,EAASC,UAC7EC,OAAM,SAAAC,GAAG,OAAGtC,QAAQuC,MAAMD,QAlB5B,+BAsBQ,OACI,0BAAM5E,UAAU,kBACZ,wBAAIA,UAAU,4BAAd,2BACZ,kBAAC,EAAD,CAAY2C,QAASjD,KAAKQ,MAAMyC,UACpB,kBAACkD,EAAA,EAAD,CAAO7F,UAAU,OAAO8F,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACnD,+BACX,4BACA,wBAAIwI,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,qBACA,wBAAIA,MAAM,OAAV,wBAGU,+BACV/O,KAAKqB,MAAM+N,OAAO9J,KAAI,SAAA+J,GACvB,OACC,wBAAIpJ,IAAOoC,KAAKC,UAChB,4BAAK+G,EAAEvB,MACP,4BAAKuB,EAAEtB,OACP,4BAAKsB,EAAEtJ,cACP,4BAAKsJ,EAAE3I,OACP,4BAAK2I,EAAEC,gBACP,4BAAKD,EAAEE,4BA9Cb,GAAyCxO,aCF5ByO,EAAb,kDACI,WAAYhP,GAAO,IAAD,8BACd,cAAMA,IAkBbG,SAAW,SAAAC,GACV,EAAKgB,SAAS,CAAC6N,UAAU,CAAEC,YAAY9O,EAAEC,OAAOH,UAlB1C,EAAKW,MAAQ,CAClBsO,WAAY,GACZF,UAAW,CACVC,YAAa,KAOf,EAAKE,YAAc,EAAKA,YAAY5G,KAAjB,gBAZC,EADtB,0DAiBEhJ,KAAK4B,SAAS,CAAC6N,UAAU,CAAEC,YAAY,QAjBzC,mCAwBc,IAAD,OAKX,OAJe1P,KAAKqB,MAAMsO,WAAWjK,QAAO,SAAAmK,GAAG,OAAIA,EAAIC,WAAW7H,SAAS,EAAK5G,MAAMoO,UAAUC,YAAYK,gBAAkBF,EAAIG,UAAU/H,SAAS,EAAK5G,MAAMoO,UAAUC,YAAYK,gBAAkBF,EAAIC,WAAW7H,SAAS,EAAK5G,MAAMoO,UAAUC,YAAYO,gBAAkBJ,EAAIG,UAAU/H,SAAS,EAAK5G,MAAMoO,UAAUC,YAAYO,gBACxUJ,EAAIC,WAAW7H,SAAS,EAAK5G,MAAMoO,UAAUC,YAAY,GAAGK,cAAe,EAAK1O,MAAMoO,UAAUC,YAAYQ,MAAM,GAAGD,gBAAiBJ,EAAIG,UAAU/H,SAAS,EAAK5G,MAAMoO,UAAUC,YAAY,GAAGK,cAAe,EAAK1O,MAAMoO,UAAUC,YAAYQ,MAAM,GAAGD,oBA1B/P,0CAiCEjQ,KAAK8O,gBAjCP,oCAoCiB,IAAD,OACZlM,QAAQC,IAAI,yBACE,IAAI6G,QAAQ,cAC5B5H,MAAM,mCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAAC+N,WAAW5K,EAASC,UACjFC,OAAM,SAAAC,GAAG,OAAGtC,QAAQuC,MAAMD,QA1C5B,+BA4Ca,IAAD,EACqBlF,KAAKqB,MAAlBoO,GADR,EACHE,WADG,EACQF,WACZ/J,EAAS1F,KAAKmQ,aAWd,OACI,0BAAM7P,UAAU,kBACZ,wBAAIA,UAAU,4BAAd,oBACZ,kBAAC,EAAD,CAAY2C,QAASjD,KAAKQ,MAAMyC,UAChC,8BACC,2BAAO1C,KAAO,OACdG,MAAS+O,EAAUC,YACnB/O,SAAYX,KAAKW,SACjBF,YAAc,gBAId,kBAACuD,EAAA,EAAD,CAAQC,QAAQ,UAAU/C,QAAWlB,KAAK4P,aAA1C,UAED,kBAACzJ,EAAA,EAAD,CAAO7F,UAAU,OAAO8F,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACvC,+BACX,4BACA,wBAAIwI,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WAGU,+BACVrJ,EAAOJ,KAAI,SAAA8K,GACZ,OACC,wBAAInK,IAAOoC,KAAKC,UAChB,4BAAK8H,EAAEN,YACP,4BAAKM,EAAEJ,WACP,4BAAKI,EAAEC,OACP,4BAAKD,EAAEE,aAMT,6BACC,kBAAC,IAAD,CAAM3M,GAAG,YACT,kBAACK,EAAA,EAAD,CAAQC,QAAQ,WAAhB,mCA/FL,GAAqClD,aCAxBwP,EAAb,kDACI,WAAY/P,GAAO,IAAD,8BACd,cAAMA,IA6DbgQ,mBAAqB,SAAA5P,GACpB,EAAKgB,SAAS,CAAC6O,aAAe7P,EAAEC,OAAOH,SA/DnB,EAkErBgQ,oBAAsB,SAAA9P,GACrB,EAAKgB,SAAS,CAAC+O,cAAgB/P,EAAEC,OAAOH,MAAOkQ,eAAe,KAjExD,EAAKvP,MAAQ,CAClBwP,MAAO,GACPC,OAAQ,GACRL,aAAc,GACdE,cAAgB,GAChBI,eAAgB,GAChBC,gBAAiB,GACjBJ,eAAe,GAKhB,EAAKJ,mBAAqB,EAAKA,mBAAmBxH,KAAxB,gBAC1B,EAAK0H,oBAAsB,EAAKA,oBAAoB1H,KAAzB,gBAC3B,EAAKiI,cAAgB,EAAKA,cAAcjI,KAAnB,gBAhBD,EADtB,gEAwBChJ,KAAK8O,cACL9O,KAAKkR,iBAzBN,qCA2BkB,IAAD,OAIhBpP,MAAM,kCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAO,EAAKpD,SAAS,CAACoP,gBAAgBjM,EAASC,UACtFC,OAAM,SAAAC,GAAG,OAAGtC,QAAQuC,MAAMD,MAG3BpD,MAAM,iCACLgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAO,EAAKpD,SAAS,CAACmP,eAAehM,EAASC,UACrFC,OAAM,SAAAC,GAAG,OAAGtC,QAAQuC,MAAMD,QAxC5B,oCA6CiB,IAAD,OACZtC,QAAQC,IAAI,yBACE,IAAI6G,QAAQ,eAC7B5H,MAAM,oCACJgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAACiP,MAAM9L,EAASC,UAC3EC,OAAM,SAAAC,GAAG,OAAGtC,QAAQuC,MAAMD,MAC5BpD,MAAM,qCACJgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAanC,QAAQC,IAAIkC,EAASC,MAAM,EAAKpD,SAAS,CAACkP,OAAO/L,EAASC,UAC5EC,OAAM,SAAAC,GAAG,OAAGtC,QAAQuC,MAAMD,QAvD7B,sCA4DElF,KAAK4B,SAAS,CAACgP,eAAe,EAAOH,aAAc,GAAIE,cAAe,OA5DxE,+BAuEa,IAIPjL,EAJM,OACV9C,QAAQC,IAAI7C,KAAKqB,MAAMsP,eACvB/N,QAAQC,IAAI7C,KAAKqB,MAAMoP,cAItB/K,EAHqB1F,KAAKqB,MAAMuP,cAGvB5Q,KAAKqB,MAAM2P,gBAAgBtL,QAAO,SAAA0K,GAAC,OAAIA,EAAEtC,MAAQ,EAAKzM,MAAMoP,cAAgBL,EAAErC,OAAS,EAAK1M,MAAMsP,iBAAgBT,MAAM,EAAE,GAE1HlQ,KAAKqB,MAAM0P,eAAerL,QAAO,SAAA0K,GAAC,OAAIA,EAAEtC,MAAQ,EAAKzM,MAAMoP,gBAAcP,MAAM,EAAE,GAG3F,IAAIiB,EAAcnR,KAAKQ,MAAM2Q,YAIvB,OACI,0BAAM7Q,UAAU,kBACxB,kBAAC,EAAD,CAAY2C,QAASjD,KAAKQ,MAAMyC,UACpB,wBAAI3C,UAAU,4BAAd,sBACZ,0BAAMyB,OAAS,OACf,kBAAC8I,EAAA,EAAKM,MAAN,aACE,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAK,SACnB1K,SAAUX,KAAKwQ,oBACd,iCACCxQ,KAAKqB,MAAMwP,MAAMvL,KAAI,SAAA8L,GAAC,OACvB,4BAAQnL,IAAOoC,KAAKC,UAAW8I,EAAEtD,UAGpC,kBAACjD,EAAA,EAAKM,MAAN,cACE,kBAACN,EAAA,EAAKO,QAAN,CAAcC,GAAK,SAAS3K,MAAOyQ,EACnCxQ,SAAUX,KAAK0Q,qBACd,qCACC1Q,KAAKqB,MAAMyP,OAAOxL,KAAI,SAAA8L,GAAC,OACxB,4BAAQnL,IAAOoC,KAAKC,UAAW8I,EAAErD,WAGpC,kBAAC/J,EAAA,EAAD,CAAQC,QAAQ,UAAU/C,QAAWlB,KAAKiR,eAA1C,mBAIA,6BACA,sCAAYjR,KAAKqB,MAAMoP,cACvB,uCAAazQ,KAAKqB,MAAMsP,gBAExB,kBAACxK,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACtB,+BACX,wBAAIN,IAAOoC,KAAKC,UAChB,wBAAIyG,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,mBAKU,+BACVrJ,EAAOJ,KAAI,SAAA8K,GACZ,OACC,wBAAInK,IAAOoC,KAAKC,UAChB,4BAAK8H,EAAE5G,WACP,4BAAK4G,EAAEN,YACP,4BAAKM,EAAEJ,WACP,4BAAKI,EAAEC,OACP,4BAAKD,EAAEiB,oBAQT,6BACC,kBAAC,IAAD,CAAM1N,GAAG,YACT,kBAACK,EAAA,EAAD,CAAQC,QAAQ,WAAhB,mCAjJL,GAAsClD,a,2BCKzBuQ,I,MAAb,kDACI,WAAY9Q,GAAQ,IAAD,8BACf,cAAMA,IAoBV+Q,aAAe,SAAA1P,GAAS,IACb2P,EAAY,EAAKnQ,MAAjBmQ,SACDC,EAAM,gBACLD,EADK,eAEP3P,EAAMhB,OAAOyG,KAAOzF,EAAMhB,OAAOH,QAEtC,EAAKkB,SAAS,CAAC4P,SAAUC,KAzBzB,EAAKpQ,MAAQ,CACTqQ,eAAgB,GAChBC,QAAQ,EACRH,SAAU,CACNI,OAAO,EACP1L,OAAO,EACP2L,cAAe,GACfC,aAAc,GAElB/J,cAAc,EAAOW,YAAY,IAErC,EAAK6I,aAAgB,EAAKA,aAAavI,KAAlB,gBACrB,EAAK+I,eAAiB,EAAKA,eAAe/I,KAApB,gBAdP,EADvB,gEAmBQhJ,KAAKgS,yBAnBb,6CAgC4B,IAAD,OACL,IAAItI,QAAQ,+CAC1B5H,MAAM,+CACDgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAc,EAAKnD,SAAS,CAAE8P,eAAgB3M,EAASC,UAC5DC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QArCxC,mCAwCQlF,KAAK2R,OAAS3R,KAAKqB,MAAMsQ,SAxCjC,yCA2CQ3R,KAAKiS,eA3Cb,uCA8CsB,IAAD,OACPjN,EAAOhF,KAAKqB,MAAMmQ,SACjBG,EAAU3R,KAAKqB,MAAfsQ,OACM,gBAAOA,EAAP,CAAeA,QAAQ,IACpC7P,MAAM,gDAAD,OAAiDkD,EAAK4M,OAAtD,mBAAuE5M,EAAKkB,OAA5E,0BAAoGlB,EAAK6M,cAAzG,yBAAuI7M,EAAK8M,eAChJhN,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAE,GACFpC,QAAQC,IAAImC,GAERA,EAAK4E,SACLlH,MAAM,oBAIZ,SAACyC,GACGzC,MAAM,UACN,EAAKd,SAAS,CAACmG,cAAc,EAAMW,YAAa,gBA9D9D,+BA8Fc,IAAD,OACL9F,QAAQC,IAAI7C,KAAKqB,MAAMmQ,UACvB,IAAMU,EAAU,CACZ,CACI/F,OAAQ,UACRgG,SAAU,SACVC,UAAU,EACVrH,MAAO,CACHsH,UAAW,UAEfC,MAAO,GACPC,SAAU,IAEd,CACIpG,OAAQ,gBACRgG,SAAU,aACVC,UAAU,EACVE,MAAO,IAEX,CACInG,OAAQ,eACRgG,SAAU,YACVK,YAAY,EACZC,aAAc,SAAC/M,EAAQ6F,GAAT,OACVmH,aAAYnH,EAAM7F,EAAOhF,MAAO,CAAEiS,KAAM,CAAC,gBAC7CC,WAAW,GAEf,CACIzG,OAAQ,mBACRgG,SAAU,0BACVC,UAAU,EACVE,MAAO,IAEX,CACInG,OAAQ,kBACRgG,SAAU,yBACVK,YAAY,EACZC,aAAc,SAAC/M,EAAQ6F,GAAT,OACVmH,aAAYnH,EAAM7F,EAAOhF,MAAO,CAAEiS,KAAM,CAAC,6BAC7CC,WAAW,GAEf,CACIzG,OAAQ,SACRgG,SAAU,SACVC,UAAU,GAEd,CACIjG,OAAQ,OACRgG,SAAU,OACVC,UAAU,GAEd,CACIjG,OAAQ,UACRgG,SAAU,UACVC,UAAU,EACVE,MAAO,IAEX,CACInG,OAAQ,QACRgG,SAAU,QACVC,UAAU,GAEd,CACIjG,OAAQ,QACRgG,SAAU,QACVC,UAAU,GAEd,CACIjG,OAAQ,mBACRgG,SAAU,WACVC,UAAU,GAEd,CACIjG,OAAQ,gBACR0G,KAAM,SAAAC,GACF,OACI,kBAAC9O,EAAA,EAAD,CAAQC,QAAQ,kBAAkBsC,KAAK,KACnCrF,QAAS,WACL,EAAKU,SAAS,CACV4P,SAAS,CAACI,OAAQkB,EAAEC,SAASnB,UAEjC,EAAKoB,mBACL,EAAKpR,SAAS,CACV+P,QAAQ,MAPpB,WAaRW,MAAO,GACPvH,MAAO,CACHsH,UAAW,YAKvB,MACI,CACI,kBAAC,EAAD,CACApP,QAASjD,KAAKQ,MAAMyC,UAEpB,kFAGA,kBAAC,KAAD,CAAYiP,QAASA,EACjBlN,KAAMhF,KAAKqB,MAAMqQ,eACjBuB,gBAAiB,KAGrB,6BAEQjT,KAAKqB,MAAMsQ,OACX,8BACA,iDAAuB3R,KAAKqB,MAAMmQ,SAASI,QAC3C,sEASO,kBAAC/G,EAAA,EAAKI,MAAN,CAAaF,MAAO,CAAEuH,MAAO,QACzB,kBAACzH,EAAA,EAAKM,MAAN,eACA,2BAAO5K,KAAK,SAAS+G,KAAO,SAC5B3G,SAAYX,KAAKuR,aAAavI,KAAKhJ,SAIvC,kBAAC6K,EAAA,EAAKI,MAAN,CAAYF,MAAO,CAAEuH,MAAO,QACxB,kBAACzH,EAAA,EAAKM,MAAN,sBACA,2BAAO5K,KAAK,OAAO+G,KAAO,gBAAgB7G,YAAY,aACtDE,SAAYX,KAAKuR,aAAavI,KAAKhJ,SAIvC,kBAAC6K,EAAA,EAAKI,MAAN,CAAYF,MAAO,CAAEuH,MAAO,QACxB,kBAACzH,EAAA,EAAKM,MAAN,qBACA,2BAAO5K,KAAK,OAAO+G,KAAO,eAAe7G,YAAY,sBACrDE,SAAYX,KAAKuR,aAAavI,KAAKhJ,SAGvC,kBAACgE,EAAA,EAAD,CAAQ9C,QAASlB,KAAK+R,gBAAtB,WAIb,WAjPlB,GAA8BhR,cCLjBmS,GAAb,kDACI,WAAY1S,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACT8R,iBAAkB,GAClBC,MAAM,CAACxB,OAAQ,KAJJ,EADvB,gEAWQ5R,KAAKqT,2BAXb,+CAa8B,IAAD,OACP,IAAI3J,QAAQ,4CAC1B5H,MAAM,4CACDgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAc,EAAKnD,SAAS,CAAEuR,iBAAkBpO,EAASC,UAC9DC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QAlBxC,wCAsBQtC,QAAQC,IAAI7C,KAAKqB,MAAM+R,OACvB,IAAME,EAAStT,KAAKqB,MAAM+R,MAAMxB,OAChC9P,MAAM,8CAAD,OAA+CwR,IACnDxO,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC3BK,MAAM,mCACN1C,KAAKqT,2BA3Bb,uCA+BQzQ,QAAQC,IAAI7C,KAAKqB,MAAM+R,OACvB,IAAME,EAAStT,KAAKqB,MAAM+R,MAAMxB,OAChC9P,MAAM,6CAAD,OAA8CwR,IAClDxO,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC3BK,MAAM,mCACN1C,KAAKqT,2BApCb,+BAuCc,IAAD,OACLzQ,QAAQC,IAAI7C,KAAKqB,MAAM+R,OACvB,IAAMlB,EAAU,CACZ,CACI/F,OAAQ,UACRgG,SAAU,SACVC,UAAU,EACVrH,MAAO,CACHsH,UAAW,UAEfC,MAAO,GACPC,SAAU,IAEd,CACIpG,OAAQ,OACRgG,SAAU,WACVC,UAAU,EACVrH,MAAO,CACHsH,UAAW,WAGnB,CACIlG,OAAQ,yBACRgG,SAAU,0BACVC,UAAU,EACVrH,MAAO,CACHsH,UAAW,WAGnB,CACIlG,OAAQ,wBACRgG,SAAU,yBACVC,UAAU,EACVrH,MAAO,CACHsH,UAAW,WAGnB,CACIlG,OAAQ,SACRgG,SAAU,aACVC,UAAU,EACVrH,MAAO,CACHsH,UAAW,WAGnB,CACIlG,OAAQ,QACRgG,SAAU,kBACVC,UAAU,EACVrH,MAAO,CACHsH,UAAW,WAGnB,CACIlG,OAAQ,SACR0G,KAAM,SAAAC,GACF,OAEI,kBAAC9O,EAAA,EAAD,CAAQC,QAAQ,eAAesC,KAAK,KACpCrF,QAAW,kBAAI,EAAKU,SAAS,CAACwR,MAAM,CAACxB,OAAQkB,EAAEC,SAASnB,YADxD,WAKRU,MAAO,GACPvH,MAAO,CACHsH,UAAW,WAGnB,CACIlG,OAAQ,SACR0G,KAAM,SAAAC,GACF,OACI,kBAAC9O,EAAA,EAAD,CAAQC,QAAQ,iBAAiBsC,KAAK,KACtCrF,QAAW,EAAKqS,eAAevK,KAAK,IADpC,WAKRsJ,MAAO,GACPvH,MAAO,CACHsH,UAAW,WAGnB,CACIlG,OAAQ,UACR0G,KAAM,SAAAC,GACF,OACI,kBAAC9O,EAAA,EAAD,CAAQC,QAAQ,kBAAkBsC,KAAK,KACvCrF,QAAW,EAAKsS,gBAAgBxK,KAAK,IADrC,YAMRsJ,MAAO,GACPvH,MAAO,CACHsH,UAAW,YAIvB,OAII,6BACA,kBAAC,EAAD,CACIpP,QAASjD,KAAKQ,MAAMyC,UAExB,kBAAC,KAAD,CAAYiP,QAASA,EACjBlN,KAAMhF,KAAKqB,MAAM8R,iBACjBF,gBAAiB,UAnJjC,GAA+ClS,aCFlC0S,GAAb,kDACI,WAAYjT,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTqS,QAAS,CACLC,SAAU,EACVC,wBAAyB,GACzBC,uBAAwB,GACxBC,WAAY,UACZC,gBAAiB,IAErBC,UAAW,GACX/S,UAAU,EACVgT,mBAAmB,EACnBC,UAAW,IAIf,EAAKC,wBAA0B,EAAKA,wBAAwBnL,KAA7B,gBAC/B,EAAKoL,sBAAwB,EAAKA,sBAAsBpL,KAA3B,gBAlBd,EADvB,gEAuBQhJ,KAAK6E,gBAvBb,oCAyBmB,IAAD,OACI,IAAI6E,QAAQ,4CAC1B5H,MAAM,4CACDgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAc,EAAKnD,SAAS,CAAEoS,UAAWjP,EAASC,UACvDC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QA9BxC,2CAgCyBtE,GACjB,IAAIyP,EAAQrQ,KAAKqB,MAAM2S,UAAUtO,QAAO,SAAA2K,GACpC,OAAOA,EAAMA,QAAUzP,EAAEC,OAAOH,SAEpCkC,QAAQC,IAAI,aAAcwN,GACN,GAAhBA,EAAM1O,QACNiB,QAAQC,IAAI,cACZ7C,KAAK4B,SAAS,CAAEqS,mBAAmB,KAEnCjU,KAAK4B,SAAS,CAAEqS,mBAAmB,MAzC/C,8CA4C4BrT,GACpB,IAAIyP,EAAQrQ,KAAKqB,MAAM2S,UAAUtO,QAAO,SAAA2K,GACpC,OAAOA,EAAMA,QAAUzP,EAAEC,OAAOH,SAEpCkC,QAAQC,IAAI,eAAgBwN,GAC5BzN,QAAQC,IAAI,eAAgB7C,KAAKqB,MAAM2S,WAC1B,IAAT3D,EACArQ,KAAK4B,SAAS,CAAEX,UAAU,IAK1BjB,KAAK4B,SAAS,CAAEX,UAAU,MAxDtC,4CA2D0BY,GAClBA,EAAMqH,iBACN,IAAIlE,EAAO,CACPqL,MAAOxO,EAAMhB,OAAOwP,MAAM3P,MAC1B2T,MAAOxS,EAAMhB,OAAOwT,MAAM3T,MAC1BoP,WAAYjO,EAAMhB,OAAOiP,WAAWpP,MACpCsP,UAAWnO,EAAMhB,OAAOmP,UAAUtP,MAClC4T,KAAMzS,EAAMhB,OAAOyT,KAAK5T,MACxB6T,OAAQ1S,EAAMhB,OAAO0T,OAAO7T,MAC5BW,MAAOQ,EAAMhB,OAAOQ,MAAMX,MAC1B8T,QAAS3S,EAAMhB,OAAO2T,QAAQ9T,OAE9B+I,EAAU,IAAIC,QAAQ,4CAA6C,CACnE3H,OAAQ,OACRC,QAAS,IAAI2H,QAAQ,CAAE,OAAU,mBAAoB,eAAgB,qBACrE1H,KAAMC,KAAKC,UAAU6C,KAEzBpC,QAAQC,IAAIX,KAAKC,UAAU6C,IAC3BlD,MAAM2H,GACD3E,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAE,GACFpC,QAAQC,IAAImC,MAEfC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,MAChCxC,MAAM,wBACN1C,KAAK6E,gBApFb,8CAuF4BhD,GAAQ,IAAD,OAC3BA,EAAMqH,iBACN,IAAIlE,EAAO,CACP2O,SAAU9R,EAAMhB,OAAO8S,SAASjT,MAChCkT,wBAAyB/R,EAAMhB,OAAO+S,wBAAwBlT,MAC9DmT,uBAAwBhS,EAAMhB,OAAOgT,uBAAuBnT,MAC5DoT,WAAY,UACZC,gBAAiBlS,EAAMhB,OAAOkT,gBAAgBrT,OAE9C+I,EAAU,IAAIC,QAAQ,8CAA+C,CACrE3H,OAAQ,OACRC,QAAS,IAAI2H,QAAQ,CAAE,OAAU,mBAAoB,eAAgB,qBACrE1H,KAAMC,KAAKC,UAAU6C,KAEzBpC,QAAQC,IAAIX,KAAKC,UAAU6C,IAC3BlD,MAAM2H,GACD3E,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAE1ByC,MAAK,SAAAE,GACFpC,QAAQC,IAAImC,EAAK4E,SACjB,EAAKhI,SAAS,CAACsS,UAAUlP,EAAK4E,aAC7B3E,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,MAWpCxC,MAAM,0BACN1C,KAAK6E,gBAxHb,uCA0HsB,IAAD,OACC,IAAI6E,QAAQ,0CAC1B5H,MAAM,0CACDgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GACFnC,QAAQC,IAAI,MAAOkC,EAASC,MAC5B,EAAKpD,SAAS,CAAEsS,UAAWO,SAAS1P,EAASC,KAAK0P,OAAQ,IAAIC,gBAGjE1P,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QAnIxC,+BA0Ic,IAAD,OAEL,OADAtC,QAAQC,IAAI,YAAa7C,KAAKqB,MAAM6S,WAEhC,mCACI,kBAAC,EAAD,CACAjR,QAASjD,KAAKQ,MAAMyC,UAEpB,6CAAkB,mCAAlB,uBACA,oGAEA,yBAAK3C,UAAU,YACX,kBAACuK,EAAA,EAAD,CAAMC,SAAU9K,KAAKoU,uBACjB,kBAACvJ,EAAA,EAAK0B,IAAN,KACI,kBAAC1B,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,SAC3B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,QAAQgH,UAAQ,EAAC9G,YAAY,cAC5CmU,OAAQ,SAAChU,GAAD,OAAO,EAAKiU,qBAAqBjU,OAGjD,kBAACiK,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,SAC3B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,QAAQgH,UAAQ,EAAC9G,YAAY,wCAGxD,kBAACoK,EAAA,EAAK0B,IAAN,KACI,kBAAC1B,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,cAC3B,kBAACL,EAAA,EAAKM,MAAN,mBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,sBAGnD,kBAACoK,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,aAC3B,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,sBAGvD,kBAACoK,EAAA,EAAKI,MAAN,CAAYC,UAAU,UAClB,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7D,UAAQ,EAAC9G,YAAY,kBAGvC,kBAACoK,EAAA,EAAK0B,IAAN,KACI,kBAAC1B,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,QAC3B,kBAACL,EAAA,EAAKM,MAAN,aACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7D,UAAQ,KAG1B,kBAACsD,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,SAC3B,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7D,UAAQ,KAG1B,kBAACsD,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,WAC3B,kBAACL,EAAA,EAAKM,MAAN,YACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7D,UAAQ,MAG9B,kBAACvD,EAAA,EAAD,CAAQC,QAAQ,UAAU1D,KAAK,SAC3BU,SAAUjB,KAAKqB,MAAM4S,mBADzB,WAMJ,kIACA,oCAAS,6CAAT,OAAmCjU,KAAKqB,MAAM6S,YAGlD,yBAAK5T,UAAU,YACX,kBAACuK,EAAA,EAAD,CAAMC,SAAU9K,KAAKmU,yBACjB,kBAACtJ,EAAA,EAAK0B,IAAN,KACI,kBAAC1B,EAAA,EAAKI,MAAN,CAAYC,UAAU,mBAClB,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7D,UAAQ,EAClBqN,OAAQ,SAAChU,GAAD,OAAO,EAAKkU,wBAAwBlU,OAEpD,kBAACiK,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,YAC3B,kBAACL,EAAA,EAAKM,MAAN,yBACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOgH,UAAQ,EAAC9G,YAAY,0CAGvD,kBAACoK,EAAA,EAAK0B,IAAN,KACI,kBAAC1B,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,2BAC3B,kBAACL,EAAA,EAAKM,MAAN,iCACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOE,YAAY,cAG1C,kBAACoK,EAAA,EAAKI,MAAN,CAAYI,GAAImB,IAAKtB,UAAU,0BAC3B,kBAACL,EAAA,EAAKM,MAAN,+BACA,kBAACN,EAAA,EAAKO,QAAN,CAAc7K,KAAK,OAAOE,YAAY,eAG9C,kBAACuD,EAAA,EAAD,CAAQC,QAAQ,UAAU1D,KAAK,SAC3BU,SAAUjB,KAAKqB,MAAMJ,UADzB,iBApOxB,GAA4CF,aCI/BgU,GAAb,kDACI,WAAYvU,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACT2T,SAAU,CACNC,SAAU,EACVC,UAAW,GAEfC,OAAQ,GACRC,OAAQ,GACRC,gBAAiB,GACjBC,UAAU,EACVC,UAAU,EACVC,QAAQ,GAEX,EAAKC,eAAiB,EAAKA,eAAezM,KAApB,gBACtB,EAAK0M,eAAiB,EAAKA,eAAe1M,KAApB,gBAfR,EADvB,gEAoBQhJ,KAAK2V,oBApBb,uCAwBsB,IAAD,OACP7H,EAAO9N,KAAKqB,MAAM2T,SAASC,SAC3BlH,EAAQ/N,KAAKqB,MAAM2T,SAASE,UAClCtS,QAAQC,IAAI,WAAaiL,GACzBhM,MAAM,yCAAD,OAA0CgM,EAA1C,YAAkDC,IAClDjJ,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAc,EAAKnD,SAAS,CAAEwT,OAAQrQ,EAASC,UACpDC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QA/BxC,uCAkCsB,IAAD,OACP4I,EAAO9N,KAAKqB,MAAM2T,SAASC,SAC3BlH,EAAQ/N,KAAKqB,MAAM2T,SAASE,UAClCtS,QAAQC,IAAI,WAAaiL,GACzBhM,MAAM,yCAAD,OAA0CgM,EAA1C,YAAkDC,IAClDjJ,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAc,EAAKnD,SAAS,CAAEuT,OAAQpQ,EAASC,UACpDC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QAzCxC,wCA4CuB,IAAD,OACA,IAAIwE,QAAQ,yCAC1B5H,MAAM,yCACDgD,MAAK,SAAAC,GAAQ,OAAIA,EAAS1C,UAC1ByC,MAAK,SAAAC,GAAc,EAAKnD,SAAS,CAAEyT,gBAAiBtQ,EAASC,UAC7DC,OAAM,SAAAC,GAAG,OAAItC,QAAQuC,MAAMD,QAjDxC,qCAqDQlF,KAAKuV,SAAWvV,KAAKqB,MAAMkU,WArDnC,qCAyDQvV,KAAKsV,SAAWtV,KAAKqB,MAAMiU,WAzDnC,+BA2Dc,IAAD,OACL1S,QAAQC,IAAI,kBAAmB7C,KAAKqB,MAAM2T,UAC1C,IAAM9C,EAAU,CACZ,CAAC/F,OAAQ,OAAOgG,SAAU,OAAOpH,MAAO,CAACsH,UAAW,UAAUC,MAAO,IACrE,CAACnG,OAAQ,QAAQgG,SAAU,QAAQpH,MAAO,CAACsH,UAAW,UAAUC,MAAO,IACvE,CAACnG,OAAQ,qCAAqCgG,SAAU,yBAAyBpH,MAAO,CAACsH,UAAW,WACpG,CAAClG,OAAQ,0CAA0CgG,SAAU,qBAAqBpH,MAAO,CAACsH,UAAW,WACrG,CAAClG,OAAQ,wBACT0G,KAAM,SAAAC,GACF,OACI,kBAAC9O,EAAA,EAAD,CAAQC,QAAQ,kBAAkBsC,KAAK,KACnCrF,QAAS,WAAO,EAAKU,SAAS,CAACoT,SAAS,CAACC,SAAUnC,EAAEC,SAASjF,KAAKoH,UAAWpC,EAAEC,SAAShF,WAD7F,wBAMRhD,MAAO,CAACsH,UAAW,YAIjBuD,EAAa,CACf,CAACzJ,OAAQ,SAASgG,SAAU,SAASpH,MAAO,CAACsH,UAAW,UAAUC,MAAO,IACzE,CAACnG,OAAQ,cAAcgG,SAAU,cAAcpH,MAAO,CAACsH,UAAW,WAClE,CAAClG,OAAQ,cAAcgG,SAAU,yBAAyBpH,MAAO,CAACsH,UAAW,WAC7E,CAAClG,OAAQ,qBAAqBgG,SAAU,oBAAoBpH,MAAO,CAACsH,UAAW,UAAWC,MAAO,KACjG,CAACnG,OAAQ,gBAAgBgG,SAAU,eAAepH,MAAO,CAACsH,UAAW,WACrE,CAAClG,OAAQ,iBAAiBgG,SAAU,iBAAiBpH,MAAO,CAACsH,UAAW,WACxE,CAAClG,OAAQ,oBAAoBgG,SAAU,oBAAoBpH,MAAO,CAACsH,UAAW,UAAUC,MAAO,KAC/F,CAACnG,OAAQ,eAAegG,SAAU,eAAepH,MAAO,CAACsH,UAAW,WACpE,CAAClG,OAAQ,QAAQgG,SAAU,QAAQpH,MAAO,CAACsH,UAAW,YAG1D,MACI,CACI,kBAAC,EAAD,CACApP,QAASjD,KAAKQ,MAAMyC,UAEpB,kBAAC,KAAD,CAAYiP,QAASA,EACjBlN,KAAMhF,KAAKqB,MAAMgU,gBACjBpC,gBAAiB,IAGrB,6BACQ,6BACA,kBAACjP,EAAA,EAAD,CAAQC,QAAQ,kBAAkBsC,KAAK,KACnCrF,QAAS,WACL,EAAKwU,iBACL,EAAKD,iBACL,EAAKI,eACL,EAAKjU,SAAS,CACV0T,UAAW,EAAKjU,MAAMiU,aANlC,kDAUJ,6BACG,kBAACtR,EAAA,EAAD,CAAQC,QAAQ,kBAAkBsC,KAAK,KAClCrF,QAAS,WACL,EAAKwU,iBACL,EAAKD,iBACL,EAAKK,eACL,EAAKlU,SAAS,CACV2T,UAAW,EAAKlU,MAAMkU,aANnC,8CAcP,6BAEQvV,KAAKqB,MAAMkU,SACP,6BACI,kBAAC,KAAD,CAAYrD,QAAS0D,EACjB5Q,KAAMhF,KAAKqB,MAAM+T,OACjBnC,gBAAiB,KAHzB,KAOE,MAGd,6BAEQjT,KAAKqB,MAAMiU,SACP,6BACI,kBAAC,KAAD,CAAYpD,QAAS0D,EACjB5Q,KAAMhF,KAAKqB,MAAM8T,OACjBlC,gBAAiB,IAHzB,KAOE,WAvJ9B,GAAyClS,aC2C1BgV,OAhCf,WACE,OACE,kBAAC,IAAD,KACA,yBAAKzV,UAAU,aACb,wBAAIA,UAAU,qCAAd,6BAKA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0V,OAAK,EAACC,KAAK,IAAI1H,UAAWpK,IACjC,kBAAC,EAAD,CAAgB6R,OAAK,EAACC,KAAK,QAAQ1H,UAAWlK,IAE9C,kBAAC,EAAD,CAAgB2R,OAAK,EAACC,KAAK,WAAW1H,UAAWjK,IACjD,kBAAC,EAAD,CAAgB0R,OAAK,EAACC,KAAK,cAAc1H,UAAW1G,IACpD,kBAAC,EAAD,CAAgBmO,OAAK,EAACC,KAAK,iBAAiB1H,UAAWlB,IACvD,kBAAC,EAAD,CAAgB2I,OAAK,EAACC,KAAK,mBAAmB1H,UAAWK,IACzD,kBAAC,EAAD,CAAgBoH,OAAK,EAACC,KAAK,uBAAuB1H,UAAWY,IAC7D,kBAAC,EAAD,CAAgB6G,OAAK,EAACC,KAAK,mBAAmB1H,UAAWiB,IACzD,kBAAC,EAAD,CAAgBwG,OAAK,EAACC,KAAK,oBAAoB1H,UAAWgC,IAC1D,kBAAC,EAAD,CAAgByF,OAAK,EAACC,KAAK,6BAA6B1H,UAAW2E,KACnE,kBAAC,EAAD,CAAgB8C,OAAK,EAACC,KAAK,YAAY1H,UAAW+C,KAClD,kBAAC,EAAD,CAAgB0E,OAAK,EAACC,KAAK,0BAA0B1H,UAAWkF,KAChE,kBAAC,EAAD,CAAgBuC,OAAK,EAACC,KAAK,uBAAuB1H,UAAWwG,KAC7D,kBAAC,EAAD,CAAgBiB,OAAK,EAACC,KAAK,OAAO1H,UAAWF,IAC7C,kBAAC,IAAD,CAAU1K,GAAG,aChCDuS,QACW,cAA7BC,OAAOxH,SAASyH,UAEe,UAA7BD,OAAOxH,SAASyH,UAEhBD,OAAOxH,SAASyH,SAAS3I,MACvB,2DCZN4I,IAAS5H,OACP,kBAAC,IAAM6H,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7R,MAAK,SAAA8R,GACJA,EAAaC,gBAEd5R,OAAM,SAAAE,GACLvC,QAAQuC,MAAMA,EAAMyE,a","file":"static/js/main.114456c1.chunk.js","sourcesContent":["import { extendObservable} from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: '',\r\n            usertype: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"inputField\">\r\n          <input\r\n            className='input'\r\n            type={this.props.type}\r\n            placeholder={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={(e)=>this.props.onChange(e.target.value)}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n          <button\r\n          className='logbtn'\r\n          disabled={this.props.disabled}\r\n          onClick={()=>this.props.onClick()}\r\n          >\r\n            {this.props.text}\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from '../stores/UserStore';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state={\r\n          username:'',\r\n          password:'',\r\n          buttonDisabled: false\r\n        //   toDashboard: false\r\n      }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n      val = val.trim();\r\n      if (val.length > 12) {\r\n          return;\r\n      }\r\n      this.setState({\r\n          [property]:val\r\n      })\r\n  }\r\n  resetForm() {\r\n      this.setState({\r\n          username:'',\r\n          password:'',\r\n          buttonDisabled:false\r\n      })\r\n  }\r\n\r\n  async doLogin(event) {\r\n      if (!this.state.username) {\r\n          return;\r\n      }\r\n      if (!this.state.password) {\r\n          return;\r\n      }\r\n      this.setState({\r\n          buttonDisabled: true\r\n      })\r\n      try{\r\n        let res = await fetch('http://localhost:4000/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n            })\r\n        });\r\n        let result = await res.json();\r\n        if (result && result.success) {\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n            UserStore.usertype = result.usertype;\r\n            // console.log(\"I am before push\");\r\n            // this.setState({toDashboard: true});\r\n        } else if (result && result.success === false) {\r\n            this.resetForm();\r\n            alert(result.msg);\r\n        }\r\n      } catch(e) {\r\n        console.log(e);\r\n        this.resetForm();\r\n      }\r\n  }\r\n\r\n  render() {\r\n    // if (UserStore.isLoggedIn === true) {\r\n    //     return <Redirect to=\"/animals\" />;\r\n    // }\r\n    return (\r\n      <div className=\"loginForm\">\r\n          Log in\r\n          <InputField\r\n            type='text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={(val) => this.setInputValue('username', val)}\r\n          />\r\n          <InputField\r\n            type='password'\r\n            placeholder='Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={(val) => this.setInputValue('password', val)}\r\n          />\r\n          <SubmitButton\r\n            text='Login'\r\n            disabled={this.state.buttonDisabled}\r\n            onClick={(e)=>this.doLogin(e)}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, Button, NavDropdown} from 'react-bootstrap';\r\nimport UserStore from './stores/UserStore';\r\n\r\nexport class Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    async doLogout() {\r\n        try {\r\n          let res = await fetch('/logout', {\r\n            method: 'post',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          let result = await res.json();\r\n          if (result && result.success) {\r\n            UserStore.isLoggedIn = false;\r\n            UserStore.username = '';\r\n            UserStore.usertype = '';\r\n            // return (\r\n            //     <Redirect to='/' />\r\n            // )\r\n            this.props.history.push('/');\r\n          }\r\n        } catch(e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Navbar bg=\"dark\" expand=\"lg\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav>\r\n                    <NavLink className=\"d-inline p-2 bg-dark text-white\"\r\n                    to=\"/home\">Home</NavLink>\r\n                    <NavLink className=\"d-inline p-2 bg-dark text-white\"\r\n                    to=\"/animals\">Animal Dashboard</NavLink>\r\n                </Nav>\r\n                {\r\n                  UserStore.usertype === \"Owner\" ?\r\n                <NavDropdown title=\"Report\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item><NavLink to=\"/vaccinereminder\">Vaccine Reminder</NavLink></NavDropdown.Item>\r\n                    <NavDropdown.Item><NavLink to=\"/volunteerlookup\">Volunteer Lookup</NavLink></NavDropdown.Item>\r\n                    <NavDropdown.Item><NavLink to=\"/volunteerofmonth\">Volunteer of Month</NavLink></NavDropdown.Item>\r\n                    <NavDropdown.Item><NavLink to=\"/monthadoptionreport\">Monthly Adoption Report</NavLink></NavDropdown.Item>\r\n                    <NavDropdown.Item><NavLink to=\"/AnimalControlReport\">Animal Control Report</NavLink></NavDropdown.Item>\r\n                </NavDropdown> : null\r\n                }\r\n                </Navbar.Collapse>\r\n                {\r\n                    UserStore.isLoggedIn ? \r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text className=\"text-white\">\r\n                            Signed in as {UserStore.usertype}: {UserStore.username}  \r\n                        </Navbar.Text>{'  '}\r\n                        <Button variant=\"outline-info\" onClick={()=>this.doLogout()}>Log Out</Button>\r\n                    </Navbar.Collapse> : \r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text className=\"text-white\">\r\n                        Please log in.\r\n                    </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                }\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport UserStore from './stores/UserStore';\r\nimport LoginForm from './loginComponents/loginForm';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Navigation} from './Navigation';\r\nimport './login.css';\r\n\r\nclass Login extends React.Component {\r\n  \r\n  async componentDidMount() {\r\n    try {\r\n      let res = await fetch('/isLoggedIn', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n        UserStore.usertype = result.usertype;\r\n      } else {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n      }\r\n    } catch(e) {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n    }\r\n  }\r\n\r\n  async doLogout() {\r\n    try {\r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n        UserStore.usertype = '';\r\n      }\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (UserStore.loading) {\r\n      return (\r\n        <div className=\"login\">\r\n          <div className='container'>\r\n            Loading, please wait...\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      if (UserStore.isLoggedIn) {\r\n        return (\r\n          <Redirect to='/animals' />\r\n        //   <div className=\"login\">\r\n        //     <div className='container'>\r\n        //       Welcome {UserStore.username}\r\n        //       <SubmitButton\r\n        //         text={'Log out'}\r\n        //         disabled={false}\r\n        //         onClick={()=>this.doLogout()}\r\n        //       />\r\n        //     </div>\r\n        //   </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className=\"login\">\r\n          <Navigation/>\r\n          <div className='logContainer'>\r\n            \r\n            <LoginForm />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default observer(Login);\r\n","import React, { Component } from 'react';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigation history={this.props.history}/>\r\n            <div className=\"mt-5 d-flex justify-content-left\">\r\n                \r\n                <h3>\r\n                    Welcome to Shelter Management Portal.\r\n                    This is the Home page.\r\n                </h3>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport UserStore from './stores/UserStore';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class Animals extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {animals:[], species:'', capacity:[], adoptability:''}\r\n        // this.state = {animals:[], addModalShow: false}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList() {\r\n        console.log(\"I am fetching data...\");\r\n        fetch('http://localhost:4000/api/animals')\r\n        .then(response => response.json())\r\n        .then(response => {console.log(response.data);this.setState({animals: response.data});})\r\n        .catch(err => console.error(err));\r\n        fetch('http://localhost:4000/capacity')\r\n        .then(response => response.json())\r\n        .then(response => {console.log(response);this.setState({capacity: response.data})})\r\n        .catch(err => console.error(err));\r\n        // fetch('http://localhost:4000/species')\r\n        // .then(response => response.json())\r\n        // .then(response => this.setState({speciesCapacity: response.data}))\r\n        // .catch(err => console.error(err));\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.refreshList();\r\n    // }\r\n\r\n    getUnique(arr, comp) {\r\n        const unique = arr\r\n          //store the comparison values in array\r\n          .map(e => e[comp])\r\n    \r\n          // store the keys of the unique objects\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n    \r\n          // eliminate the dead keys & store unique objects\r\n          .filter(e => arr[e])\r\n    \r\n          .map(e => arr[e]);\r\n    \r\n        return unique;\r\n    }\r\n\r\n    handleChangeSpecies = event => {\r\n        this.setState({ species: event.target.value });\r\n    };\r\n\r\n    handleChangeAdopt = event => {\r\n        this.setState({ adoptability: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        // const animalstates = this.state.animals;\r\n        console.log(this.state.animal);\r\n        const uniqueSpecies = this.getUnique(this.state.animals, \"species_type\");\r\n        // console.log(uniqueSpecies);\r\n        const animals = this.state.animals;\r\n        const species = this.state.species;\r\n        // const capacity = this.state.speciesCapacity;\r\n        // const dogNum, catNum;\r\n        const adoptability = this.state.adoptability;\r\n        const filterDropdown = animals.filter(function(result) {\r\n            // console.log(result.species_type);\r\n            if (species === '' || species === 'all') {\r\n                if (adoptability === '' || adoptability === 'all') {\r\n                    return result.species_type === 'Cat' || result.species_type === 'Dog';\r\n                } else if (adoptability === 'adoptable') {\r\n                    return (result.species_type === 'Cat' && result.adoptability === 'adoptable') || (result.species_type === 'Dog' && result.adoptability === 'adoptable');\r\n                } else {\r\n                    return (result.species_type === 'Cat' && result.adoptability === 'not adoptable') || (result.species_type === 'Dog' && result.adoptability === 'not adoptable'); \r\n                }\r\n            } else {\r\n                if (adoptability === '' || adoptability === 'all') {\r\n                    return result.species_type === species;\r\n                } else if (adoptability === 'adoptable') {\r\n                    return result.species_type === species && result.adoptability === 'adoptable';\r\n                } else {\r\n                    return result.species_type === species && result.adoptability === 'not adoptable';\r\n                }\r\n            }\r\n        })\r\n        //console.log(uniqueSpecies);\r\n        // let addModalClose = () => this.setState({addModalShow: false});\r\n        return (\r\n            <div>\r\n                <h5 className=\"m-3 d-flex justify-content-center\">Animal Dashboard</h5>                    \r\n                <Navigation\r\n                history={this.props.history}\r\n                />\r\n                {/* <LogoutButton/> */}\r\n                <div className=\"row\">\r\n                {this.state.capacity.map(capacity=>(\r\n                    <div className=\"col\">\r\n                    {\r\n                        capacity.capcatiy <= 0 ?\r\n                        <label>{capacity.species_type} Space left: 0</label>:\r\n                        <label>{capacity.species_type} Space left: {capacity.capcatiy}</label>\r\n                    }\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col\">\r\n                <label>\r\n                    Species Filter\r\n                    <select\r\n                    onChange={this.handleChangeSpecies}\r\n                    >\r\n                    <option>all</option>\r\n                    {uniqueSpecies.map(animal => (\r\n                        <option key={animal.pet_ID} value={animal.species_type}>\r\n                        {animal.species_type}\r\n                        </option>\r\n                    ))}\r\n                    </select>\r\n                </label>\r\n                </div>\r\n                <div className=\"col\">\r\n                <label>\r\n                    Adoptability Filter\r\n                    <select\r\n                    onChange={this.handleChangeAdopt}\r\n                    >\r\n                    <option>all</option>\r\n                    <option>adoptable</option>\r\n                    <option>unadoptable</option>\r\n                    </select>\r\n                </label>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"row mb-2\">\r\n            {\r\n                UserStore.usertype != \"Volunteer\" ?\r\n                <div className=\"mx-2\">\r\n                <Link to=\"/new-animal\">\r\n                <Button variant='primary'>\r\n                    Add Animal\r\n                </Button>\r\n                </Link>\r\n                </div> : null\r\n            }\r\n            {\r\n                UserStore.usertype != \"Volunteer\" ?\r\n                <div className=\"mx-2\">\r\n                <Link to=\"/Adoption\">\r\n                <Button variant='primary'>\r\n                    Add Adoption\r\n                </Button>\r\n                </Link>\r\n                </div>: null\r\n            }\r\n\r\n                <Link to=\"/AddAdoptionApplication\">\r\n                <Button variant='primary'>\r\n                    Add Adoption Application\r\n                </Button>\r\n                </Link>\r\n                {\r\n                UserStore.usertype === \"Owner\" ?\r\n                <div className=\"mx-2\">\r\n                <Link to=\"/AdoptionApplicationReview\">\r\n                <Button variant='primary'>\r\n                    Adoption Application Review\r\n                </Button>\r\n                </Link>\r\n                </div> : null\r\n            }\r\n            </div>\r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>animal's name</th>\r\n                        <th>species</th>\r\n                        <th>breed</th>\r\n                        <th>sex</th>\r\n                        <th>alteration status</th>\r\n                        <th>age</th>\r\n                        <th>adoptability status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {filterDropdown.map(animal => \r\n                        <tr key={animal.pet_ID}>\r\n                        <td><Link to={{pathname: `/animal/${animal.pet_ID}`, data: animal}}>{animal.animal_name}</Link></td>\r\n                        <td>{animal.species_type}</td>\r\n                        <td>{animal.breed}</td>\r\n                        <td>{animal.sex}</td>\r\n                        <td>{animal.alteration_status}</td>\r\n                        <td>{animal.age}</td>\r\n                        <td>{animal.adoptability}</td>\r\n                        </tr>\r\n                    )} \r\n                </tbody>\r\n            </Table>\r\n            {/* <ButtonToolbar> */}\r\n            {/* </div> */}\r\n                {/* <form>\r\n                <br />\r\n                <br />\r\n                <label>\r\n                    Looping through species_type tag from Database\r\n                    <select\r\n                    // value={this.state.course}\r\n                    onChange={this.handleChangeSpecies}\r\n                    >\r\n                    <option>all</option>\r\n                    {uniqueSpecies.map(animal => (\r\n                        <option key={animal.pet_ID} value={animal.species_type}>\r\n                        {animal.species_type}\r\n                        </option>\r\n                    ))}\r\n                    </select>\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                <div>\r\n                    {filterDropdown.map(animal => (\r\n                    <div key={animal.pet_ID} style={{ margin: \"10px\" }}>\r\n                        {animal.animal_name}\r\n                        <br />\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n                </form> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nconst TaskList = (props) => {\r\n  return (\r\n    props.taskList.map((val, idx) => {\r\n      let vac_type = `vac_type-${idx}`, admin_date = `admin_date-${idx}`, exp_date = `exp_date-${idx}`, vac_number = `vac_number-${idx}`\r\n      return (\r\n        <tr key={val.index}>\r\n          <td>\r\n            <select name=\"vac_type\" required id={vac_type} data-id={idx} className=\"form-control\" >\r\n              <option key='0'></option>\r\n            {props.vaccinations.map(vac_type => \r\n              <option key={vac_type.vaccine_name}>{vac_type.vaccine_name}</option>\r\n            )}\r\n              \r\n              {/* <option value=\"pending\">Pending</option>\r\n              <option value=\"In Progress\">In progress</option>\r\n              <option value=\"Completed\">Completed</option>\r\n              <option value=\"Hold\">Hold</option> */}\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <input type=\"date\"  required name=\"admin_date\" id={admin_date} data-id={idx} className=\"form-control \" />\r\n          </td>\r\n          <td>\r\n            <input type=\"date\"  required name=\"exp_date\" id={exp_date} data-id={idx} className=\"form-control \" />\r\n          </td>\r\n          <td>\r\n            <input type=\"text\"  name=\"vac_number\" data-id={idx} id={vac_number} className=\"form-control \" />\r\n          </td>\r\n          <td>\r\n            {/* {\r\n            idx===0?<button onClick={()=>props.add()} type=\"button\" className=\"btn btn-primary text-center\">Add</button>\r\n            : <button className=\"btn btn-danger\" onClick={(() => props.delete(val))} >Remove</button>\r\n            } */}\r\n            <button onClick={()=>props.add()} type=\"button\" className=\"btn btn-primary text-center\">Add</button>\r\n            <button className=\"btn btn-danger\" onClick={(() => props.delete(val))} >Remove</button>\r\n          </td>\r\n        </tr >\r\n      )\r\n    })\r\n  )\r\n}\r\nexport default TaskList","import React, { Component } from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TaskList from \"./TaskList\";\r\nimport {Navigation} from './Navigation';\r\nimport UserStore from './stores/UserStore';\r\n\r\nexport class AddAnimal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            snackbaropen: false, \r\n            snackbarmsg:'',\r\n            breeds:[],\r\n            selectedSpecies:'Cat',\r\n            addedBreeds:[''],\r\n            vaccinations:[],\r\n            capacity:[],\r\n            full: false,\r\n            taskList: [{ index: Math.random(), vac_type: \"\", admin_date: \"\", exp_date: \"\", vac_number: \"\" }]\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:4000/breeds')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({breeds: response.data});\r\n            //console.log(response.data);\r\n        })\r\n        .catch(err => console.error(err));\r\n        fetch('http://localhost:4000/vaccination')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({vaccinations: response.data});\r\n            //console.log(response.data);\r\n        })\r\n        .catch(err => console.error(err));\r\n        fetch('http://localhost:4000/capacity')\r\n        .then(response => response.json())\r\n        .then(response => {console.log(response);this.setState({capacity: response.data})})\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    speciesHandler(e) {\r\n        // let species = this.state;\r\n        // console.log(this.state.capacity[0].capcatiy);\r\n        for (let step = 0; step < this.state.capacity.length; step++) {\r\n            if ((this.state.capacity[step].species_type === e.target.value) && (this.state.capacity[step].capcatiy <= 0)) {\r\n                this.setState({full: true, snackbaropen: true, snackbarmsg:\"There is no more room for this species.\"});\r\n                return;\r\n            }\r\n        }\r\n        this.setState({full: false, snackbaropen: false, selectedSpecies: e.target.value});\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({snackbaropen: false});\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let breeds = [...this.state.addedBreeds];\r\n        console.log(breeds);\r\n        console.log(this.state.taskList);\r\n        let data = {\r\n            animal_name:event.target.animal_name.value,\r\n            microchip_ID: event.target.microchip_ID.value,\r\n            description: event.target.description.value,\r\n            alteration_status: event.target.alteration_status.value === \"Yes\" ? 1 : 0,\r\n            sex: event.target.sex.value,\r\n            age: event.target.age.value,\r\n            surrender_reason: event.target.surrender_reason.value,\r\n            surrender_date: event.target.surrender_date.value,\r\n            by_animal_control: event.target.by_animal_control.value === \"Yes\" ? 1 : 0,\r\n            user_name: UserStore.username,\r\n            species_type: event.target.species_type.value,\r\n            breed: breeds,\r\n            vaccinations: this.state.taskList\r\n          };\r\n          var request = new Request('http://localhost:4000/api/new-animal', {\r\n            method: 'POST',\r\n            headers: new Headers({'Accept':'application/json', 'Content-Type': 'application/json'}),\r\n            body:JSON.stringify(data)\r\n          });\r\n        //   console.log(data);\r\n          console.log(JSON.stringify(data));          \r\n          //xmlhttprequest()\r\n          //there is problem with snack bar\r\n          fetch(request)\r\n            .then(response=>response.json())\r\n                .then(data => {\r\n                  console.log(data);\r\n                  this.setState({snackbaropen: true, snackbarmsg: data.message ? 'Data inserted! Please wait for redirect.' : 'failed'});\r\n                  if (data.message) {\r\n                    setTimeout(() => {this.props.history.push(`/animal/${data.message}`)}, 3000);\r\n                  }\r\n                  //   return <Redirect to='/'\r\n                },\r\n                (error) => {\r\n                    // alert('Failed');\r\n                    this.setState({snackbaropen: true, snackbarmsg: 'failed'});\r\n                }\r\n                )\r\n    }\r\n\r\n    getUnique(arr, comp) {\r\n        const unique = arr\r\n          //store the comparison values in array\r\n          .map(e => e[comp])\r\n    \r\n          // store the keys of the unique objects\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n    \r\n          // eliminate the dead keys & store unique objects\r\n          .filter(e => arr[e])\r\n    \r\n          .map(e => arr[e]);\r\n    \r\n        return unique;\r\n    }\r\n    addBreed() {\r\n        this.setState({addedBreeds: [...this.state.addedBreeds,\"\"]});\r\n    }\r\n\r\n    handleChange(e, index) {\r\n        console.log(index);\r\n        this.state.addedBreeds[index] = e.target.value;\r\n        this.setState({addedBreeds: this.state.addedBreeds});\r\n    }\r\n    \r\n    handleRemove(index) {\r\n        console.log(index);\r\n        this.state.addedBreeds.splice(index, 1);\r\n        console.log(this.state.addedBreeds, \"$$$$\");\r\n        this.setState({addedBreeds: this.state.addedBreeds});\r\n        console.log(this.state.addedBreeds);\r\n    }\r\n\r\n    handleTaskChange = (e) => {\r\n        if ([\"vac_type\", \"admin_date\", \"exp_date\", \"vac_number\"].includes(e.target.name)) {\r\n            let taskList = [...this.state.taskList]\r\n            taskList[e.target.dataset.id][e.target.name] = e.target.value;\r\n        } else {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            taskList: [...prevState.taskList, { index: Math.random(), vac_type: \"\", admin_date: \"\", exp_date: \"\", vac_number: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deteteRow = (index) => {\r\n        this.setState({\r\n            taskList: this.state.taskList.filter((s, sindex) => index !== sindex),\r\n        });\r\n        // const taskList1 = [...this.state.taskList];\r\n        // taskList1.splice(index, 1);\r\n        // this.setState({ taskList: taskList1 });\r\n    }\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            taskList: this.state.taskList.filter(r => r !== record)\r\n        });\r\n    }\r\n    //Add Animal pop up window.\r\n    render() {\r\n        const uniqueSpecies = this.getUnique(this.state.breeds, \"species_type\");\r\n        // console.log(this.state.breeds);\r\n        let { taskList } = this.state;\r\n        let species = this.state.breeds.filter(species => {\r\n            return species.species_type === this.state.selectedSpecies\r\n        });\r\n        let vaccine = this.state.vaccinations.filter(species => {\r\n            return species.species_type === this.state.selectedSpecies\r\n        });\r\n        console.log(vaccine);\r\n        return (\r\n            <div className=\"container\">\r\n                <Snackbar \r\n                    anchorOrigin={{vertical:'bottom', horizontal: 'center'}}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration = {3000}\r\n                    onClose={this.snackbarClose}\r\n\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" arial-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}>\r\n                            x\r\n                        </IconButton>\r\n                    ]}\r\n                />\r\n                <Navigation history={this.props.history}/>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                <div className=\"row\" style={{ marginTop: 20 }}>\r\n                <div className=\"col-sm-2\"></div>\r\n                <div className=\"col-sm-8\">\r\n                <h5 className=\"m-3 d-flex justify-content-center\">Add New Animal</h5>                    \r\n                        <Form.Group controlId=\"species_type\">\r\n                        <Form.Label>Species Type</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={(e) => this.speciesHandler(e)}>\r\n                            <option></option>\r\n                            {uniqueSpecies.map(breed => (\r\n                            <option>\r\n                            {breed.species_type}\r\n                            </option>\r\n                            ))}\r\n                        </Form.Control>\r\n                        {   this.state.full ?\r\n                                <Form.Text className=\"text-danger\">\r\n                                We don't have more space for this species.\r\n                            </Form.Text>: null}\r\n                    </Form.Group>\r\n                </div>\r\n                </div>\r\n                <fieldset disabled={this.state.full?\"disabled\":null}>\r\n                <div className=\"row\" style={{ marginTop: 20 }}>\r\n                <div className=\"col-sm-2\"></div>\r\n                <div className=\"col-sm-8\">\r\n                    <Form.Group controlId=\"animal_name\">\r\n                        <Form.Label>Animal Name</Form.Label>\r\n                        <Form.Control type=\"text\" required placeholder=\"animal name\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"microchip_ID\">\r\n                        <Form.Label>Microchip ID</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Microchip ID\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"description\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" required rows=\"3\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"alteration_status\">\r\n                        <Form.Label>Alteration Status</Form.Label>\r\n                        <Form.Control as=\"select\">\r\n                            <option>Yes</option>\r\n                            <option>No</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"sex\">\r\n                        <Form.Label>Sex</Form.Label>\r\n                        <Form.Control as=\"select\">\r\n                            <option>male</option>\r\n                            <option>female</option>\r\n                            <option>Unknown</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"age\">\r\n                        <Form.Label>Age</Form.Label>\r\n                        <Form.Control type=\"text\" required placeholder=\"age\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"surrender_reason\">\r\n                        <Form.Label>Surrender Reason</Form.Label>\r\n                        <Form.Control type=\"text\" required placeholder=\"surrender reason\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"surrender_date\">\r\n                        <Form.Label>Surrender Date</Form.Label>\r\n                        <Form.Control type=\"date\" required placeholder=\"yyyymmdd\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"by_animal_control\">\r\n                        <Form.Label>Sent by Animal Control</Form.Label>\r\n                        <Form.Control as=\"select\">\r\n                            <option>Yes</option>\r\n                            <option>No</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"breeds\">\r\n                        <Form.Label>breeds</Form.Label>\r\n                        {/* <Form.Control as=\"select\" onChange={(e)=>this.handleChange(e, 0)}>\r\n                        <option key=\"0\"></option>\r\n                        {species.map(breed => \r\n                            <option key={breed.breed_name}>{breed.breed_name}</option>\r\n                            )}\r\n                        </Form.Control> */}\r\n                        {\r\n                           this.state.addedBreeds.map((breed, index)=> {\r\n                               return (\r\n                                <div key={index}>\r\n                                <Form.Control as=\"select\" onChange={(e)=>this.handleChange(e, index)}>\r\n                                <option key=\"0\"></option>\r\n                                {species.map(breed => \r\n                                    <option key={breed.breed_name}>{breed.breed_name}</option>\r\n                                    )}\r\n                                </Form.Control>\r\n                                <Button variant=\"danger\" \r\n                                    disabled={!index}\r\n                                    onClick={()=>this.handleRemove(index)}>Remove</Button>\r\n                                </div>\r\n                               );\r\n                           }) \r\n                        }\r\n                        <Button variant=\"outline-primary\" onClick={(e)=>this.addBreed(e)}>\r\n                        Add breed\r\n                    </Button>\r\n                    </Form.Group>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <Form.Group onChange={this.handleTaskChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            {/* <div className=\"card\"> */}\r\n                                <div className=\"card-header text-center\">Add Vaccinations</div>\r\n                                <div className=\"card-body\">\r\n                                \r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"required\" >Vaccination type</th>\r\n                                                <th className=\"required\" >Administration Date</th>\r\n                                                <th>Expiration date</th>\r\n                                                <th>vaccination number</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <TaskList add={this.addNewRow} delete={this.clickOnDelete.bind(this)} vaccinations={vaccine} taskList={taskList} />\r\n                                        </tbody>\r\n                                        {/* <tfoot>\r\n                                            <tr><td colSpan=\"4\">\r\n                                                <button onClick={this.addNewRow} type=\"button\" className=\"btn btn-primary text-center\">Add</button>\r\n                                            </td></tr>\r\n                                        </tfoot> */}\r\n                                    </table>\r\n                                </div>\r\n                                {/* <div className=\"card-footer text-center\"> <button type=\"submit\" className=\"btn btn-primary text-center\">Submit</button></div> */}\r\n                            {/* </div> */}\r\n                        </div>\r\n                    </div>\r\n                    </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    </fieldset>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditAnimalDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {snackbaropen: false, snackbarmsg:'', microchip_ID:'', alteration_status:'', sex:'', breed:'',\r\n        breeds:[],\r\n        selectedSpecies:'',\r\n        addedBreeds:[]};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://localhost:4000/breeds')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({breeds: response.data});\r\n            //console.log(response.data);\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({snackbaropen: false});\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({microchip_ID: nextProps.microchip_ID, alteration_status: nextProps.alteration_status, sex: nextProps.sex, breed:nextProps.breed, selectedSpecies:nextProps.animal.species_type});\r\n        this.state.addedBreeds[0] = nextProps.breed;\r\n        this.setState({addedBreeds: this.state.addedBreeds});\r\n    }\r\n\r\n    microchipHandler(e) {\r\n        this.setState({microchip_ID: e.target.value});\r\n    }\r\n    sexHandler(e) {\r\n        this.setState({sex: e.target.value});\r\n    }\r\n    alterationHandler(e) {\r\n        this.setState({alteration_status: e.target.value});\r\n    }\r\n    breedHandler(e) {\r\n        this.setState({breed: e.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const item = this.state;\r\n        console.log(item);\r\n        // this.props.saveModalDetails(item)\r\n        let data = {\r\n            pet_ID: this.props.animal.pet_ID,\r\n            microchip_ID: event.target.microchip_ID.value,\r\n            alteration_status: event.target.alteration_status.value,\r\n            sex: event.target.sex.value,\r\n            breed: this.state.addedBreeds,\r\n            species_type: this.props.animal.species_type\r\n          };\r\n          var request = new Request('http://localhost:4000/updateAnimal', {\r\n            method: 'PUT',\r\n            headers: new Headers({'Accept':'application/json', 'Content-Type': 'application/json'}),\r\n            body:JSON.stringify(data)\r\n          });\r\n          console.log(JSON.stringify(data));          \r\n          //xmlhttprequest()\r\n          fetch(request)\r\n            .then(response=>response.json())\r\n                .then(data => {\r\n                  //console.log(data);\r\n                  //alert(data.message);\r\n                  this.setState({snackbaropen: true, snackbarmsg: data.message ? data.message : 'failed'});\r\n                },\r\n                (error) => {\r\n                    // alert('Failed');\r\n                    this.setState({snackbaropen: true, snackbarmsg: 'failed'});\r\n                }\r\n                )\r\n    }\r\n    addBreed() {\r\n        this.setState({addedBreeds: [...this.state.addedBreeds,\"\"]});\r\n    }\r\n    handleChange(e, index) {\r\n        console.log(index);\r\n        this.state.addedBreeds[index] = e.target.value;\r\n        this.setState({addedBreeds: this.state.addedBreeds});\r\n    }\r\n    \r\n    handleRemove(index) {\r\n        console.log(index);\r\n        this.state.addedBreeds.splice(index, 1);\r\n        console.log(this.state.addedBreeds, \"$$$$\");\r\n        this.setState({addedBreeds: this.state.addedBreeds});\r\n        console.log(this.state.addedBreeds);\r\n    }\r\n\r\n    render() {\r\n        let species = this.state.breeds.filter(species => {\r\n            return species.species_type === this.state.selectedSpecies\r\n        })\r\n        // if (this.props.breed === \"Mixed\" || this.props.breed === \"Unknown\") {\r\n        //     this.setState({addedBreeds: [...this.state.addedBreeds,this.props.breed]});\r\n        // }\r\n        return (\r\n            <div className=\"container\">\r\n                <Snackbar \r\n                    anchorOrigin={{vertical:'bottom', horizontal: 'center'}}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration = {3000}\r\n                    onClose={this.snackbarClose}\r\n\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" arial-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}>\r\n                            x\r\n                        </IconButton>\r\n                    ]}\r\n                />\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Edit Animal\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"breeds\">\r\n                                <Form.Label>Breeds</Form.Label>\r\n                                {\r\n                                ((this.props.breed !== \"Unknown\") && (this.props.breed !== \"Mixed\")) ?\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"breed\" \r\n                                    required \r\n                                    defaultValue = {this.props.breed}\r\n                                    placeholder=\"breed\"\r\n                                    disabled={(this.props.breed !== \"Unknown\") && (this.props.breed !== \"Mixed\")}\r\n                                /> :\r\n                            //     }   \r\n                            // {\r\n                                this.state.addedBreeds.map((breed, index)=> {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                        <Form.Control as=\"select\" \r\n                                        disabled={(this.props.breed !== \"Unknown\") && (this.props.breed !== \"Mixed\")}\r\n                                        defaultValue={this.props.breed}\r\n                                        onChange={(e)=>this.handleChange(e, index)}>\r\n                                        {species.map(breed => \r\n                                            <option key={breed.breed_name}>{breed.breed_name}</option>\r\n                                            )}\r\n                                        </Form.Control>\r\n                                        <Button variant=\"outline-danger\" onClick={()=>this.handleRemove(index)}>Remove</Button>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                                \r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" disabled={(this.props.breed !== \"Unknown\") && (this.props.breed !== \"Mixed\")} onClick={(e)=>this.addBreed(e)}>\r\n                                Add breed\r\n                            </Button>\r\n                                \r\n                                <Form.Group controlId=\"sex\">\r\n                                <Form.Label>Sex</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\"\r\n                                    name=\"sex\" \r\n                                    required \r\n                                    defaultValue = {this.props.sex}\r\n                                    placeholder=\"sex\"\r\n                                    disabled={this.props.sex !== \"Unknown\" && this.props.sex != \"unknown\"}\r\n                                    onChange={(e) => this.sexHandler(e)}\r\n                                >\r\n                                    <option>Unknown</option>\r\n                                    <option>male</option>\r\n                                    <option>female</option>\r\n                                </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"microchip_ID\">\r\n                                <Form.Label>Microchip ID</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"microchip_ID\"  \r\n                                    defaultValue = {this.props.microchip_ID}\r\n                                    placeholder=\"microchip_ID\"\r\n                                    onChange={(e) => this.microchipHandler(e)}\r\n                                />\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group controlId=\"alteration_status\">\r\n                                <Form.Label>Alteration Status</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"alteration_status\" \r\n                                    required \r\n                                    defaultValue = {this.props.alteration_status}\r\n                                    placeholder=\"alteration_status\"\r\n                                    disabled={this.props.alteration_status === 1}\r\n                                    onChange={(e) => this.alterationHandler(e)}\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">Update Animal info</Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\nexport class EditVaccination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {snackbaropen: false, snackbarmsg:'',\r\n        vaccinetypes:[],\r\n        pet_ID: {},\r\n        selectedSpecies:'',\r\n        addedVac:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({snackbaropen: false});\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({selectedSpecies:nextProps.selectedSpecies, pet_ID:nextProps.pet_ID});\r\n        let {petid} = nextProps.pet_ID;\r\n        console.log(\"pet id is \" + petid);\r\n        fetch(`http://localhost:4000/${petid}/vaccination`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({vaccinetypes: response.data});\r\n            //console.log(response.data);\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({addedVac: e.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        // const item = this.state;\r\n        // this.props.saveModalDetails(item)\r\n        event.preventDefault();\r\n        let data = {\r\n            pet_ID: this.state.pet_ID.petid,\r\n            vac_type: event.target.vac_type.value,\r\n            admin_date: event.target.admin_date.value,\r\n            vac_number: event.target.vac_number.value,\r\n            exp_date: event.target.exp_date.value,\r\n            user_name: UserStore.username\r\n        };\r\n          var request = new Request('http://localhost:4000/updateVaccination', {\r\n            method: 'POST',\r\n            headers: new Headers({'Accept':'application/json', 'Content-Type': 'application/json'}),\r\n            body:JSON.stringify(data)\r\n          });\r\n          console.log(JSON.stringify(data));          \r\n          //xmlhttprequest()\r\n          fetch(request)\r\n            .then(response=>response.json())\r\n                .then(data => {\r\n                  //console.log(data);\r\n                  //alert(data.message);\r\n                  this.setState({snackbaropen: true, snackbarmsg: data.message ? data.message : 'failed'});\r\n                },\r\n                (error) => {\r\n                    // alert('Failed');\r\n                    this.setState({snackbaropen: true, snackbarmsg: 'failed'});\r\n                }\r\n                )\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.vaccinetypes);\r\n        let species = this.state.vaccinetypes.filter(vaccine => {\r\n            return vaccine.species_type === this.state.selectedSpecies\r\n        })\r\n        console.log(species);\r\n        console.log(this.state.selectedSpecies);\r\n        return (\r\n            <div className=\"container\">\r\n                <Snackbar \r\n                    anchorOrigin={{vertical:'bottom', horizontal: 'center'}}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration = {3000}\r\n                    onClose={this.snackbarClose}\r\n\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" arial-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}>\r\n                            x\r\n                        </IconButton>\r\n                    ]}\r\n                />\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Edit Animal\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"vaccinations\">\r\n                                    <Form.Label>Vaccination</Form.Label>\r\n                                        <Form.Control as=\"select\" \r\n                                        name=\"vac_type\"   \r\n                                        required \r\n                                        onChange={(e)=>this.handleChange(e)}>\r\n                                        {species.map((vac,index) => \r\n                                            <option key={index}>{vac.vaccine_name}</option>\r\n                                            )}\r\n                                        </Form.Control>\r\n                                </Form.Group>\r\n                                    \r\n                                <Form.Group controlId=\"vac_number\">\r\n                                <Form.Label>Vaccination Number</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"vac_number\" \r\n                                    placeholder=\"vaccination number\"\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"admin_date\">\r\n                                    <Form.Label>Admin Date</Form.Label>\r\n                                    <Form.Control type=\"date\" required placeholder=\"yyyymmdd\" />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exp_date\">\r\n                                    <Form.Label>Expire Date</Form.Label>\r\n                                    <Form.Control type=\"date\" required placeholder=\"yyyymmdd\" />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">Add Vaccination</Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {EditAnimalDetail} from './EditAnimalDetail';\r\nimport {EditVaccination} from './EditVaccination';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class AnimalDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // snackbaropen: false, \r\n            // snackbarmsg:'',\r\n            animal: {},\r\n            vaccination:[],\r\n            editModalShow: false,\r\n            addVacShow: false\r\n        };\r\n        // this.saveModalDetails = this.saveModalDetails.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshList();\r\n    }\r\n    refreshList() {\r\n        let {petid} = this.props.match.params;\r\n        console.log(\"petid is \" + petid);\r\n        fetch(`http://localhost:4000/animal/${petid}`)\r\n        .then(response => response.json())\r\n        .then(response => {console.log(response.data);this.setState({animal: response.data[0]})})\r\n        .catch(err => console.error(err));\r\n        fetch(`http://localhost:4000/animal/${petid}/vaccination`)\r\n        .then(response => response.json())\r\n        .then(response => {console.log(response.data);this.setState({vaccination: response.data})})\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    formatDate(string) {\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(string).toLocaleDateString([],options);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.animal);\r\n        // this.refreshList();\r\n        let {animal, vaccination, breed, sex, microchip_ID, alteration_status, pet_ID, species_type} = this.state;\r\n        console.log({animal});\r\n        // console.log({vaccination});\r\n        console.log(this.state.editModalShow);\r\n        let editModalClose = ()=> {this.setState({editModalShow: false}); this.refreshList()};\r\n        let addVacClose = ()=> {this.setState({addVacShow: false}); this.refreshList()};\r\n        return (\r\n            <div>\r\n                <Navigation history={this.props.history}/>\r\n                <h5 className=\"m-3 d-flex justify-content-center\">Animal Detail</h5>                    \r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Pet ID</td>\r\n                        <td>{animal.pet_ID}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Animal Name</td>\r\n                        <td>{animal.animal_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Microchip ID</td>\r\n                        <td>{animal.microchip_ID}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Description</td>\r\n                        <td>{animal.description}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Alteration Status</td>\r\n                        <td>{animal.alteration_status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Sex</td>\r\n                        <td>{animal.sex}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Age</td>\r\n                        <td>{animal.age}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Surrender Reason</td>\r\n                        <td>{animal.surrender_reason}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Surrender Date</td>\r\n                        <td>{this.formatDate(animal.surrender_date)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>By Animal Control</td>\r\n                        <td>{animal.by_animal_control}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Username</td>\r\n                        <td>{animal.user_name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Species Type</td>\r\n                        <td>{animal.species_type}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Breed</td>\r\n                        <td>{animal.breed}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            <ButtonToolbar>\r\n                <Button \r\n                className=\"mr-2\" variant='primary'\r\n                onClick={()=> {\r\n                    this.setState({editModalShow: true, breed: animal.breed, sex: animal.sex, microchip_ID: animal.microchip_ID, alteration_status: animal.alteration_status});\r\n                }\r\n                }>\r\n                    Edit Animal\r\n                </Button>\r\n                <EditAnimalDetail\r\n                    show = {this.state.editModalShow}\r\n                    onHide = {editModalClose}\r\n                    breed = {breed}\r\n                    sex = {sex}\r\n                    microchip_ID = {microchip_ID}\r\n                    alteration_status = {alteration_status}\r\n                    animal = {animal}\r\n                    // saveModalDetails = {this.saveModalDetails}\r\n                />\r\n            </ButtonToolbar>\r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>vaccination type</th>\r\n                        <th>vaccination number</th>\r\n                        <th>admin date</th>\r\n                        <th>expiration date</th>\r\n                        <th>required for adoption</th>\r\n                        <th>admined user</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {vaccination.map((vac, index) => \r\n                        <tr key={index}>\r\n                        <td>{vac.vac_type}</td>\r\n                        <td>{vac.vac_number}</td>\r\n                        <td>{this.formatDate(vac.admin_date)}</td>\r\n                        <td>{this.formatDate(vac.exp_date)}</td>\r\n                        {vac.required_for_adoption ? <td>Yes</td> : <td>No</td>}\r\n                        <td>{vac.user_name}</td>\r\n                        </tr>\r\n                    )} \r\n                </tbody>\r\n            </Table>\r\n            <ButtonToolbar>\r\n                <Button\r\n                variant='primary'\r\n                onClick={()=>this.setState({addVacShow: true, pet_ID: animal.pet_ID, species_type: animal.species_type})}\r\n                >Add Vaccination</Button>\r\n                <EditVaccination\r\n                show={this.state.addVacShow}\r\n                onHide={addVacClose}\r\n                pet_ID={this.props.match.params}\r\n                selectedSpecies = {species_type}\r\n                />\r\n            </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Navigation} from './Navigation';\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div>\r\n            <Navigation history={this.props.history}/>\r\n            <h3>404 Not Found!</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport UserStore from './stores/UserStore';\r\n// import checkLogin from './checkLogin';\r\n\r\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\r\n    \r\n    return (\r\n        <Route \r\n            {...rest} \r\n            render={props => {\r\n                if (UserStore.isLoggedIn === true) {\r\n                    return <Component {...props} />\r\n                } else {\r\n                    alert(\"Please log in first.\");\r\n                    return (<Redirect to={\r\n                        {\r\n                            pathname: \"/\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />);\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};","import React, {Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'react-bootstrap';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class VaccineReminder extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            VacReminder: []\r\n        };\r\n    }\r\n\r\n  componentDidMount() {\r\n\t\tthis.refreshlist();\r\n    }\r\n\r\n   refreshlist(){\r\n   \tconsole.log('I am fetching data...');\r\n   \tvar request = new Request(\"/VacReminder\");\r\n\t\tfetch(\"http://localhost:4000/VacReminder\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(response => {console.log(response.data);this.setState({VacReminder:response.data});})\r\n\t.catch(err=> console.error(err))}\r\n\r\n\r\n    render(){\r\n        return(\r\n            <main className=\"container my-5\">\r\n                <h1 className=\"text-primary text-center\">Vaccine Reminder Report</h1>\r\n\t\t\t\t<Navigation history={this.props.history}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to=\"/animals\">\r\n\t\t\t\t\t<Button variant='primary'>\r\n\t\t\t\t\t\tBack to Animal Dashboard\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div> \r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n\t                <thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">Pet ID</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Vaccine Type</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Expiration Date</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Recorder Last Name</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Recorder First Name</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Species Type</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Breed</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Sex</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Alteration Status</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Microchip ID</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Surrender Date</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n                <tbody>\r\n\t\t\t\t\t{this.state.VacReminder.map(Vaccine => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key = {Math.random()}>\r\n\t\t\t\t\t\t<td>{Vaccine.pet_ID}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.vac_type}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.exp_date}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.recorder_last_time}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.recorder_first_time}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.species_type}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.breed}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.sex}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.alteration_status}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.microchip_ID}</td>\r\n\t\t\t\t\t\t<td>{Vaccine.surrender_date}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n                </Table>\r\n            </main>\r\n        )\r\n    };\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Navigation} from './Navigation';\r\n//import axios from './axios';\r\n// import {Button} from 'react-bootstrap';\r\n// import {Link} from 'react-router-dom';\r\n// import Async from 'react-async'\r\n\r\nexport class MonthAdoptionReport extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Report: []\r\n        };\r\n    }\r\n\r\n  componentDidMount() {\r\n\t\tthis.refreshlist();\r\n    }\r\n\r\n   refreshlist(){\r\n   \tconsole.log('I am fetching data...');\r\n   \tvar request = new Request(\"http://localhost:4000/MonthAdoptReport\");\r\n\t\tfetch(\"http://localhost:4000/MonthAdoptReport\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(response => {console.log(response.data);this.setState({Report:response.data});})\r\n\t.catch(err=> console.error(err))}\r\n\r\n\r\n    render(){\r\n        return(\r\n            <main className=\"container my-5\">\r\n                <h1 className=\"text-primary text-center\">Monthly Adoption Report</h1>\r\n\t\t\t\t<Navigation history={this.props.history}/>\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n\t                <thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">Year</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Month</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Species Type</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Breed</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Count of Adoption</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Count of Surrender</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n                <tbody>\r\n\t\t\t\t\t{this.state.Report.map(R => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key = {Math.random()}>\r\n\t\t\t\t\t\t<td>{R.year}</td>\r\n\t\t\t\t\t\t<td>{R.month}</td>\r\n\t\t\t\t\t\t<td>{R.species_type}</td>\r\n\t\t\t\t\t\t<td>{R.breed}</td>\r\n\t\t\t\t\t\t<td>{R.adoption_count}</td>\r\n\t\t\t\t\t\t<td>{R.surrender_count}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n                </Table>\r\n            </main>\r\n        )\r\n    };\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'react-bootstrap';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class VolunteerLookup extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\t\t\tvolresults: [],\r\n\t\t\tvolresult: {\r\n\t\t\t\tsearch_name: ''\r\n\t\t\t}\r\n\t\t\t// loading: false,\r\n\t\t\t// filters: []\r\n\t\t};\r\n\t\t// this.clickOnChange.bind(this);\r\n\t\t// this.onChange.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\t\r\n\thandleClick() {\r\n\t\tthis.setState({volresult:{ search_name:''}});\r\n\t}\r\n\r\n\tonChange = e => {\r\n\t\tthis.setState({volresult:{ search_name:e.target.value}})\r\n\t};\r\n\r\n\tsearchName(){\r\n\t\tconst filter = this.state.volresults.filter(vol => vol.first_name.includes(this.state.volresult.search_name.toUpperCase()) || vol.last_name.includes(this.state.volresult.search_name.toUpperCase()) || vol.first_name.includes(this.state.volresult.search_name.toLowerCase()) || vol.last_name.includes(this.state.volresult.search_name.toLowerCase()) \r\n\t\t|| vol.first_name.includes(this.state.volresult.search_name[0].toUpperCase()+ this.state.volresult.search_name.slice(1).toLowerCase())|| vol.last_name.includes(this.state.volresult.search_name[0].toUpperCase()+ this.state.volresult.search_name.slice(1).toLowerCase())\r\n\t\t);\r\n\t\t// this.setState({loading: true,filters: filter});\r\n\t\treturn filter;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshlist();\r\n    }\r\n\r\n   refreshlist(){\r\n   \tconsole.log('I am fetching data...');\r\n   \tvar request = new Request(\"/VolLookup\");\r\n\t\tfetch(\"http://localhost:4000/VolLookup\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(response => {console.log(response.data);this.setState({volresults:response.data});})\r\n\t.catch(err=> console.error(err))}\r\n\t\r\n    render(){\r\n\t\tconst {volresults,volresult} = this.state;\r\n\t\tconst filter = this.searchName();\r\n\t\t// console.log(this.state.volresult.search_name);\r\n\t\t// console.log(this.state.loading);\t\r\n\t\t// let upperstring = volresult.search_name[0].toUpperCase()+ volresult.search_name.slice(1);\r\n\t\t// let filter;\r\n\t\t// if(loading){\r\n\t\t// \tfilter = volresults.filter(vol => vol.first_name.includes(volresult.search_name.toUpperCase()) || vol.last_name.includes(volresult.search_name.toUpperCase()) || vol.first_name.includes(volresult.search_name.toLowerCase()) || vol.last_name.includes(volresult.search_name.toLowerCase()) \r\n\t\t// || vol.first_name.includes(volresult.search_name[0].toUpperCase()+ volresult.search_name.slice(1))|| vol.last_name.includes(volresult.search_name[0].toUpperCase()+ volresult.search_name.slice(1)));\r\n\t\t// } else{\r\n\t\t// \tfilter = volresults;\r\n\t\t// }\r\n        return(\r\n            <main className=\"container my-5\">\r\n                <h1 className=\"text-primary text-center\">Volunteer Lookup</h1>\r\n\t\t\t\t<Navigation history={this.props.history}/>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<input type = \"text\" \r\n\t\t\t\t\tvalue = {volresult.search_name} \r\n\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\tplaceholder = \"Search Name\">\r\n\t\t\t\t\t</input>\r\n\t\t\t\t\t{/* <button onClick = {this.clickOnChange} >Search</button> */}\r\n\t\t\t\t\t{/* <button onClick = \"history.back()\" >Clear</button> */}\r\n\t\t\t\t\t<Button variant='primary' onClick = {this.handleClick} >Clear</Button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n\t                <thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">First Name</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Last Name</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Email</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Phone</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n                <tbody>\r\n\t\t\t\t\t{filter.map(v => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key = {Math.random()}>\r\n\t\t\t\t\t\t<td>{v.first_name}</td>\r\n\t\t\t\t\t\t<td>{v.last_name}</td>\r\n\t\t\t\t\t\t<td>{v.email}</td>\r\n\t\t\t\t\t\t<td>{v.Phone}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n                </Table>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to=\"/animals\">\r\n\t\t\t\t\t<Button variant='primary'>\r\n\t\t\t\t\t\tBack to Animal Dashboard\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div> \r\n            </main>\r\n        )\r\n    };\r\n\r\n}","import React, {Component, Suspense} from 'react';\r\nimport {Table, Form} from 'react-bootstrap';\r\nimport {Navigation} from './Navigation';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport class VolunteerOfMonth extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\t\t\tyears: [],\r\n\t\t\tmonths: [],\r\n\t\t\tselectedyear: '',\r\n\t\t\tselectedmonth : '',\r\n\t\t\tvolunteersyear: [],\r\n\t\t\tvolunteersmonth: [],\r\n\t\t\tmonthselected: false\r\n\t\t\t}\r\n\t\t\r\n\t\t// this.sortAscending();\r\n\t\t// this.sortAscending= this.sortAscending.bind(this);\r\n\t\tthis.selectYearOnchange = this.selectYearOnchange.bind(this);\r\n\t\tthis.selectMonthOnchange = this.selectMonthOnchange.bind(this);\r\n\t\tthis.clickOnChange = this.clickOnChange.bind(this);\r\n\r\n        };\r\n    \r\n\r\n\r\n\tcomponentDidMount() {\r\n\tthis.refreshlist();\r\n\tthis.handelselect();\r\n}\r\n   handelselect(){\r\n\t// var v1 = this.state.selectedyear;\r\n\t// var v2 = this.state.selectedmonth;\r\n\tvar r = 'http://localhost:4000/volmonth';\r\n\tfetch(\"http://localhost:4000/volmonth\")\r\n\t.then(response => response.json())\r\n\t.then(response => {console.log(response.data); this.setState({volunteersmonth:response.data})})\r\n\t.catch(err=> console.error(err))\r\n\r\n\tvar r2 = 'http://localhost:4000/volyear';\r\n\tfetch(\"http://localhost:4000/volyear\")\r\n\t.then(response => response.json())\r\n\t.then(response => {console.log(response.data); this.setState({volunteersyear:response.data})})\r\n\t.catch(err=> console.error(err))\r\n\r\n\r\n   };\r\n\r\n   refreshlist(){\r\n   \tconsole.log('I am fetching data...');\r\n   \tvar request = new Request(\"/selectyear\");\r\n\tfetch(\"http://localhost:4000/selectyear\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(response => {console.log(response.data);this.setState({years:response.data});})\r\n\t\t.catch(err=> console.error(err));\r\n\tfetch(\"http://localhost:4000/selectmonth\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(response => {console.log(response.data);this.setState({months:response.data});})\r\n\t\t.catch(err=> console.error(err))\r\n\t\r\n\t};\r\n\r\n\tclickOnChange(){\r\n\t\tthis.setState({monthselected: false, selectedyear: '', selectedmonth: ''});\r\n\t}\r\n\r\n\tselectYearOnchange = e => {\r\n\t\tthis.setState({selectedyear:  e.target.value})\r\n\t};\r\n\r\n\tselectMonthOnchange = e =>{\r\n\t\tthis.setState({selectedmonth:  e.target.value, monthselected: true})\r\n\t}\r\n\r\n    render(){\r\n\t\tconsole.log(this.state.selectedmonth);\r\n\t\tconsole.log(this.state.selectedyear);\r\n\t\tconst monthselected = this.state.monthselected;\r\n\t\tlet filter;\r\n\t\tif (monthselected){\r\n\t\t\tfilter = this.state.volunteersmonth.filter(v => v.year == this.state.selectedyear && v.month == this.state.selectedmonth ).slice(0,5)\r\n\t\t} else{\r\n\t\t\tfilter = this.state.volunteersyear.filter(v => v.year == this.state.selectedyear).slice(0,5)\r\n\t\t}\r\n\t\t\r\n\t\tvar optionState = this.props.optionState;\r\n\t\t// console.log(this.state.volunteers);\r\n\t\t// const {volresults,volresult} = this.state;\r\n\t\t// const filter = volresults.filter(vol => vol.first_name.includes(volresult.search_name.toUpperCase()) || vol.last_name.includes(volresult.search_name.toUpperCase()) || vol.first_name.includes(volresult.search_name.toLowerCase()) || vol.last_name.includes(volresult.search_name.toLowerCase())  ) \r\n        return(\r\n            <main className=\"container my-5\">\r\n\t\t\t\t<Navigation history={this.props.history}/>\r\n                <h1 className=\"text-primary text-center\">Volunteer of Month</h1>\r\n\t\t\t\t<form method = 'get'>\r\n\t\t\t\t<Form.Label>Year</Form.Label>\r\n\t\t\t\t\t\t<Form.Control as = 'select' \r\n\t\t\t\t\t\tonChange={this.selectYearOnchange}>\r\n\t\t\t\t\t\t\t<option></option>\r\n\t\t\t\t\t\t\t{this.state.years.map(d =>\r\n\t\t\t\t\t\t\t<option key = {Math.random()}>{d.year}</option>\t\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t<Form.Label>Month</Form.Label>\r\n\t\t\t\t\t\t<Form.Control as = 'select' value={optionState} \r\n\t\t\t\t\t\tonChange={this.selectMonthOnchange}>\r\n\t\t\t\t\t\t\t<option> </option>\r\n\t\t\t\t\t\t\t{this.state.months.map(d =>\r\n\t\t\t\t\t\t\t<option key = {Math.random()}>{d.month}</option>\t\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t<Button variant='primary' onClick = {this.clickOnChange}>Clear Selected</Button>\r\n\t\t\t\t{/* <button onClick = {this.clickOnChange} >Clear Selected</button> */}\r\n\t\t\t\t{/* <button onClick = {this.handelselect()} >Search</button> */}\r\n\t\t\t\t</form>\r\n\t\t\t\t<div>\r\n\t\t\t\t<h4>Year:  {this.state.selectedyear}</h4>\r\n\t\t\t\t<h4>Month:  {this.state.selectedmonth}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Table striped bordered hover size=\"sm\">\r\n\t                <thead>\r\n\t\t\t\t\t\t<tr key = {Math.random()}>\r\n\t\t\t\t\t\t<th scope=\"col\">User Name</th>\r\n\t\t\t\t\t\t<th scope=\"col\">First Name</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Last Name</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Email</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Working Hours</th>\r\n\t\t\t\t\t\t{/* <th scope=\"col\">Year</th>\r\n\t\t\t\t\t\t<th scope=\"col\">Month</th> */}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n                <tbody>\r\n\t\t\t\t\t{filter.map(v => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key = {Math.random()}>\r\n\t\t\t\t\t\t<td>{v.user_name}</td>\r\n\t\t\t\t\t\t<td>{v.first_name}</td>\r\n\t\t\t\t\t\t<td>{v.last_name}</td>\r\n\t\t\t\t\t\t<td>{v.email}</td>\r\n\t\t\t\t\t\t<td>{v.working_time}</td>\r\n\t\t\t\t\t\t{/* <td>{v.year}</td>\r\n\t\t\t\t\t\t<td>{v.month}</td> */}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n                </Table>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to=\"/animals\">\r\n\t\t\t\t\t<Button variant='primary'>\r\n\t\t\t\t\t\tBack to Animal Dashboard\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div> \r\n            </main>\r\n\r\n        )\r\n    };\r\n\r\n}","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport matchSorter from 'match-sorter';\r\nimport Form from 'react-bootstrap/Form';\r\n//https://codesandbox.io/s/5eyxxxyx?from-embed=&file=/index.js:2060-2066\r\n//https://deploy-preview-941--react-table.netlify.app/#/story/custom-filtering\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Navigation} from './Navigation';\r\n\r\nimport './react-table.css';\r\n\r\nexport class Adoption extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appliLastNames: [],\r\n            showMe: false,\r\n            newadopt :{\r\n                app_ID:0,\r\n                pet_ID:0,\r\n                adoption_date: '',\r\n                adoption_fee: 0\r\n            },\r\n            snackbaropen: false, snackbarmsg:'',        \r\n        };\r\n        this.handlechange =  this.handlechange.bind(this);\r\n        this.addAdoptionDnF = this.addAdoptionDnF.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApplicantInfoList();\r\n    }\r\n\r\n    handlechange = event =>{\r\n        const {newadopt} = this.state;\r\n        const newadd = {\r\n            ...newadopt,\r\n            [event.target.name]: event.target.value\r\n          };\r\n        this.setState({newadopt: newadd});\r\n    }\r\n\r\n\r\n    getApplicantInfoList() {\r\n        var request = new Request(\"http://localhost:4001/getApplicantTotalInfo\");\r\n        fetch(\"http://localhost:4000/getApplicantTotalInfo\")\r\n            .then(response => response.json())\r\n            .then(response => { this.setState({ appliLastNames: response.data }); })\r\n            .catch(err => console.error(err))\r\n    }\r\n    RevealForm() {\r\n        this.showMe = this.state.showMe;\r\n    }\r\n    openSelectedName() {\r\n        this.RevealForm();\r\n    }\r\n\r\n    addAdoptionDnF() {\r\n        const data = this.state.newadopt;\r\n        const {showMe} = this.state;\r\n        const newshow = {...showMe, showMe: true};\r\n        fetch(`http://localhost:4000/addadoption/add?app_ID=${data.app_ID}&pet_ID=${data.pet_ID}&adoption_date=${data.adoption_date}&adoption_fee=${data.adoption_fee}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            // this.setState({snackbaropen: true, snackbarmsg: data.message ? 'Data inserted! Please wait for redirect.' : 'failed'});\r\n            if (data.message) {\r\n                alert('Data inserted');\r\n            }\r\n            //   return <Redirect to='/'\r\n          },\r\n          (error) => {\r\n              alert('Failed');\r\n              this.setState({snackbaropen: true, snackbarmsg: 'failed'});\r\n          }\r\n          )\r\n\r\n\r\n        //   var request = new Request('http://localhost:4000/api/new-animal', {\r\n        //     method: 'POST',\r\n        //     headers: new Headers({'Accept':'application/json', 'Content-Type': 'application/json'}),\r\n        //     body:JSON.stringify(data)\r\n        //   });\r\n        // //   console.log(data);\r\n        //   console.log(JSON.stringify(data));          \r\n        //   //xmlhttprequest()\r\n        //   //there is problem with snack bar\r\n        //   fetch(request)\r\n        //     .then(response=>response.json())\r\n        //         .then(data => {\r\n        //           console.log(data);\r\n        //           this.setState({snackbaropen: true, snackbarmsg: data.message ? 'Data inserted! Please wait for redirect.' : 'failed'});\r\n        //           if (data.message) {\r\n        //             setTimeout(() => {this.props.history.push(`/animal/${data.message}`)}, 3000);\r\n        //           }\r\n        //           //   return <Redirect to='/'\r\n        //         },\r\n        //         (error) => {\r\n        //             alert('Failed');\r\n        //             this.setState({snackbaropen: true, snackbarmsg: 'failed'});\r\n        //         }\r\n        //         )  \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log(this.state.newadopt);\r\n        const columns = [\r\n            {\r\n                Header: \"App No.\",\r\n                accessor: \"app_ID\",\r\n                sortable: false,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                },\r\n                width: 50,\r\n                maxWidth: 50\r\n            },\r\n            {\r\n                Header: \"App firstname\",\r\n                accessor: \"first_name\",\r\n                sortable: false,\r\n                width: 80\r\n            },\r\n            {\r\n                Header: \"App lastname\",\r\n                accessor: \"last_name\",\r\n                filterable: true,\r\n                filterMethod: (filter, rows) =>\r\n                    matchSorter(rows, filter.value, { keys: [\"last_name\"] }),\r\n                filterAll: true\r\n            },\r\n            {\r\n                Header: \"Co-app firstname\",\r\n                accessor: \"co_applicant_first_name\",\r\n                sortable: false,\r\n                width: 80\r\n            },\r\n            {\r\n                Header: \"Co-app lastname\",\r\n                accessor: \"co_applicant_last_name\",\r\n                filterable: true,\r\n                filterMethod: (filter, rows) =>\r\n                    matchSorter(rows, filter.value, { keys: [\"co_applicant_last_name\"] }),\r\n                filterAll: true\r\n            },\r\n            {\r\n                Header: \"Street\",\r\n                accessor: \"street\",\r\n                sortable: false\r\n            },\r\n            {\r\n                Header: \"City\",\r\n                accessor: \"city\",\r\n                sortable: false\r\n            },\r\n            {\r\n                Header: \"Zipcode\",\r\n                accessor: \"zipcode\",\r\n                sortable: false,\r\n                width: 75\r\n            },\r\n            {\r\n                Header: \"Phone\",\r\n                accessor: \"phone\",\r\n                sortable: false\r\n            },\r\n            {\r\n                Header: \"Email\",\r\n                accessor: \"email\",\r\n                sortable: false\r\n            },\r\n            {\r\n                Header: \"Application Date\",\r\n                accessor: \"app_date\",\r\n                sortable: false\r\n            },\r\n            {\r\n                Header: 'Select Person',\r\n                Cell: c => {\r\n                    return (\r\n                        <Button variant=\"outline-primary\" size=\"sm\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    newadopt:{app_ID: c.original.app_ID}\r\n                                })  \r\n                                this.openSelectedName()\r\n                                this.setState({\r\n                                    showMe: true\r\n                                })\r\n                            }}\r\n                        >Select</Button>\r\n                    )\r\n                },\r\n                width: 85,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            [\r\n                <Navigation\r\n                history={this.props.history}\r\n                />,\r\n                <div>\r\n                    Use those two blank text boxes for searching name\r\n                </div>,\r\n                <ReactTable columns={columns}\r\n                    data={this.state.appliLastNames}\r\n                    defaultPageSize={10}\r\n                >\r\n                </ReactTable>,\r\n                <div>\r\n                    {\r\n                        this.state.showMe ?\r\n                        <form>\r\n                        <h4>Application ID is {this.state.newadopt.app_ID}</h4>\r\n                        <h4>based on the person you have selected!</h4>\r\n\r\n                               {/* <Form.Group style={{ width: '10%' }}>\r\n                                   <Form.Label>Application ID</Form.Label>\r\n                                   <input type=\"number\" name = 'app_ID'\r\n                                   onChange = {this.handlechange.bind(this)}\r\n                                   />\r\n                               </Form.Group>  */}\r\n\r\n                               <Form.Group  style={{ width: '10%' }}>\r\n                                   <Form.Label>Pet ID</Form.Label>\r\n                                   <input type=\"number\" name = 'pet_ID'\r\n                                   onChange = {this.handlechange.bind(this)}\r\n                                   />\r\n                               </Form.Group>\r\n\r\n                               <Form.Group style={{ width: '20%' }}>\r\n                                   <Form.Label>Adoption Date</Form.Label>\r\n                                   <input type=\"text\" name = 'adoption_date' placeholder=\"YYYY-MM-DD\"\r\n                                   onChange = {this.handlechange.bind(this)}\r\n                                   />\r\n                               </Form.Group> \r\n\r\n                               <Form.Group style={{ width: '20%' }}>\r\n                                   <Form.Label>Adoption Fee</Form.Label>\r\n                                   <input type=\"text\" name = 'adoption_fee' placeholder=\"Number, No need '$'\"\r\n                                   onChange = {this.handlechange.bind(this)}\r\n                                   />\r\n                               </Form.Group> \r\n                               <Button onClick={this.addAdoptionDnF}>\r\n                                   Submit\r\n                               </Button>\r\n                   </form>\r\n                : null\r\n                    }\r\n                </div>\r\n            ]\r\n\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport ReactTable from 'react-table-6';\r\nimport './react-table.css';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class AdoptionApplicationReview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            applicationInfos: [],\r\n            appID:{app_ID: ''}\r\n        };\r\n    // this.onChangeApprove.bind(this.onChangeApprove);\r\n    // this.onChangeReject.bind(this.onChangeReject);\r\n    }\r\n    componentDidMount() {\r\n        this.getApplicationInfoList();\r\n    }\r\n    getApplicationInfoList() {\r\n        var request = new Request(\"http://localhost:4001/getAllApplicantion\");\r\n        fetch(\"http://localhost:4000/getAllApplicantion\")\r\n            .then(response => response.json())\r\n            .then(response => { this.setState({ applicationInfos: response.data }); })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    onChangeApprove(){\r\n        console.log(this.state.appID)\r\n        const app_id = this.state.appID.app_ID;\r\n        fetch(`http://localhost:4000/updateapprove?app_id=${app_id}`)\r\n        .then(response => response.json());\r\n        alert(\"You've Approved an application!\");\r\n        this.getApplicationInfoList();\r\n    }\r\n\r\n    onChangeReject(){\r\n        console.log(this.state.appID)\r\n        const app_id = this.state.appID.app_ID;\r\n        fetch(`http://localhost:4000/updatereject?app_id=${app_id}`)\r\n        .then(response => response.json());\r\n        alert(\"You've Rejected an application!\");\r\n        this.getApplicationInfoList();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.appID);\r\n        const columns = [\r\n            {\r\n                Header: \"App No.\",\r\n                accessor: \"app_ID\",\r\n                sortable: false,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                },\r\n                width: 70,\r\n                maxWidth: 70\r\n            },\r\n            {\r\n                Header: \"Date\",\r\n                accessor: \"app_date\",\r\n                sortable: false,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Co-applicant firstname\",\r\n                accessor: \"co_applicant_first_name\",\r\n                sortable: false,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Co-applicant lastname\",\r\n                accessor: \"co_applicant_last_name\",\r\n                sortable: false,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Status\",\r\n                accessor: \"app_status\",\r\n                sortable: false,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: \"Email\",\r\n                accessor: \"applicant_email\",\r\n                sortable: false,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: 'Select',\r\n                Cell: c => {\r\n                    return (\r\n                        // <input type=\"checkbox\" id=\"myCheck\" onClick = {()=>this.setState({appID:{app_ID: c.original.app_ID}})}>\r\n                        <Button variant=\"outline-info\" size=\"sm\"\r\n                        onClick = {()=>this.setState({appID:{app_ID: c.original.app_ID}})} \r\n                        >Select</Button>\r\n                    )\r\n                },\r\n                width: 85,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: 'Reject',\r\n                Cell: c => {\r\n                    return (\r\n                        <Button variant=\"outline-danger\" size=\"sm\"\r\n                        onClick = {this.onChangeReject.bind(this)}  \r\n                        >Reject</Button>\r\n                    )\r\n                },\r\n                width: 85,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            },\r\n            {\r\n                Header: 'Approve',\r\n                Cell: c => {\r\n                    return (\r\n                        <Button variant=\"outline-success\" size=\"sm\"\r\n                        onClick = {this.onChangeApprove.bind(this)\r\n                        }\r\n                        >Approve</Button>\r\n                    )\r\n                },\r\n                width: 85,\r\n                style: {\r\n                    textAlign: \"center\"\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            // <div>\r\n            //  <h4>You have selected Application ID: {this.state.appID.app_ID}</h4>\r\n            // </div>\r\n            <div>\r\n            <Navigation\r\n                history={this.props.history}\r\n                />\r\n            <ReactTable columns={columns}\r\n                data={this.state.applicationInfos}\r\n                defaultPageSize={10}\r\n            >\r\n            </ReactTable>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class AddAdoptionApplication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appInfo: {\r\n                app_date: 0,\r\n                co_applicant_first_name: '',\r\n                co_applicant_last_name: '',\r\n                app_status: 'Pending',\r\n                applicant_email: ''\r\n            },\r\n            emailList: [],\r\n            disabled: false,\r\n            disabledapplicant: false,\r\n            appIDlist: []\r\n        }\r\n        // this.handleApplicantEmail = this.handleApplicantEmail.bind(this);\r\n        // this.handleApplicantionEmail = this.handleApplicantionEmail.bind(this);\r\n        this.handleApplicationSubmit = this.handleApplicationSubmit.bind(this);\r\n        this.handleApplicantSubmit = this.handleApplicantSubmit.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.refreshList()\r\n    }\r\n    refreshList() {\r\n        var request = new Request(\"http://localhost:4001/getAllEmailFromApp\");\r\n        fetch(\"http://localhost:4000/getAllEmailFromApp\")\r\n            .then(response => response.json())\r\n            .then(response => { this.setState({ emailList: response.data }); })\r\n            .catch(err => console.error(err))\r\n    }\r\n    handleApplicantEmail(e) {\r\n        let email = this.state.emailList.filter(email => {\r\n            return email.email === e.target.value;\r\n        });\r\n        console.log(\"appplicant\", email)\r\n        if (email.length != 0) {\r\n            console.log(\"1231231312\")\r\n            this.setState({ disabledapplicant: true });\r\n        } else {\r\n            this.setState({ disabledapplicant: false });\r\n        }\r\n    }\r\n    handleApplicantionEmail(e) {\r\n        let email = this.state.emailList.filter(email => {\r\n            return email.email === e.target.value;\r\n        });\r\n        console.log(\"appplication\", email)\r\n        console.log(\"appplication\", this.state.emailList)\r\n        if (email == '') {\r\n            this.setState({ disabled: true });\r\n\r\n            // alert(\"your email doesn't exist! Register first!\")\r\n        }\r\n        else {\r\n            this.setState({ disabled: false });\r\n        }\r\n    }\r\n    handleApplicantSubmit(event) {\r\n        event.preventDefault();\r\n        let data = {\r\n            email: event.target.email.value,\r\n            phone: event.target.phone.value,\r\n            first_name: event.target.first_name.value,\r\n            last_name: event.target.last_name.value,\r\n            city: event.target.city.value,\r\n            street: event.target.street.value,\r\n            state: event.target.state.value,\r\n            zipcode: event.target.zipcode.value\r\n        }\r\n        var request = new Request('http://localhost:4000/insertIntoApplicant', {\r\n            method: 'POST',\r\n            headers: new Headers({ 'Accept': 'application/json', 'Content-Type': 'application/json' }),\r\n            body: JSON.stringify(data)\r\n        });\r\n        console.log(JSON.stringify(data));\r\n        fetch(request)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n            .catch(err => console.error(err))\r\n        alert(\"New Applicant Added!\");\r\n        this.refreshList();\r\n        // this.generateApp_ID();\r\n    }\r\n    handleApplicationSubmit(event) {\r\n        event.preventDefault();\r\n        let data = {\r\n            app_date: event.target.app_date.value,\r\n            co_applicant_first_name: event.target.co_applicant_first_name.value,\r\n            co_applicant_last_name: event.target.co_applicant_last_name.value,\r\n            app_status: 'Pending',\r\n            applicant_email: event.target.applicant_email.value\r\n        }\r\n        var request = new Request('http://localhost:4000/insertIntoApplication', {\r\n            method: 'POST',\r\n            headers: new Headers({ 'Accept': 'application/json', 'Content-Type': 'application/json' }),\r\n            body: JSON.stringify(data)\r\n        });\r\n        console.log(JSON.stringify(data));\r\n        fetch(request)\r\n            .then(response => response.json())\r\n            \r\n            .then(data => {\r\n                console.log(data.message);\r\n                this.setState({appIDlist:data.message});\r\n              }).catch(err => console.error(err))\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            // .then(data => {\r\n            //     console.log(data);\r\n            // })\r\n            // .catch(err => console.error(err))\r\n        // this.generateApp_ID();\r\n        alert(\"New Application Added!\");\r\n        this.refreshList();\r\n    }\r\n    generateApp_ID() {\r\n        var request = new Request(\"http://localhost:4000/getApplicationID\");\r\n        fetch(\"http://localhost:4000/getApplicationID\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(\"res\", response.data);\r\n                this.setState({ appIDlist: parseInt(response.data.max_ID, 10).toString() });\r\n            })\r\n\r\n            .catch(err => console.error(err))\r\n        //        this.showApp_ID();\r\n    }\r\n    // showApp_ID() {\r\n    //     alert(\"You've registered! Your application ID is: \", this.state.appIDlist);\r\n    // }\r\n\r\n    render() {\r\n        console.log(\"appidlist\", this.state.appIDlist);\r\n        return (\r\n            <container>\r\n                <Navigation\r\n                history={this.props.history}\r\n                />\r\n                <h3>New Applicant <b>MUST</b> register at first!</h3>\r\n                <h3>In order to get an application ID, please fill out this form first!!</h3>\r\n                {/* <h5>email, phone, first_name, last_name, city, street, state,zipcode</h5> */}\r\n                <div className=\"col-sm-8\">\r\n                    <Form onSubmit={this.handleApplicantSubmit}>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"email\" >\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" required placeholder=\"Enter email\"\r\n                                    onBlur={(e) => this.handleApplicantEmail(e)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"phone\">\r\n                                <Form.Label>Phone</Form.Label>\r\n                                <Form.Control type=\"phone\" required placeholder=\"eg. 1230008888 no special symbols\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"first_name\" >\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control type=\"name\" required placeholder=\"Enter First Name\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"last_name\" >\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control type=\"name\" required placeholder=\"Enter Last Name\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group controlId=\"street\">\r\n                            <Form.Label>Street</Form.Label>\r\n                            <Form.Control required placeholder=\"1234 Main St\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"city\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control required />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"state\">\r\n                                <Form.Label>State</Form.Label>\r\n                                <Form.Control required />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"zipcode\">\r\n                                <Form.Label>Zip</Form.Label>\r\n                                <Form.Control required />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                            disabled={this.state.disabledapplicant}\r\n\r\n                        >\r\n                            Submit</Button>\r\n                    </Form>\r\n                    <h5> If you have already registered, fill out this form and system will asign a new Application ID!</h5>\r\n                    <h3>Your <b>Application ID</b> is {this.state.appIDlist}</h3>\r\n                    {/* <h4>   app_ID,app_date,co_applicant_first_name, co_applicant_last_name,app_status,applicant_email   </h4> */}\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                    <Form onSubmit={this.handleApplicationSubmit}>\r\n                        <Form.Row>\r\n                            <Form.Group controlId=\"applicant_email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control required\r\n                                    onBlur={(e) => this.handleApplicantionEmail(e)} />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"app_date\">\r\n                                <Form.Label>Application Date</Form.Label>\r\n                                <Form.Control type=\"text\" required placeholder='eg.20200101 no \"*-/.\" symbols, etc.' />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"co_applicant_first_name\" >\r\n                                <Form.Label> Co applicant first name</Form.Label>\r\n                                <Form.Control type=\"name\" placeholder=\"optional\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"co_applicant_last_name\">\r\n                                <Form.Label>Co applicant last name</Form.Label>\r\n                                <Form.Control type=\"name\" placeholder=\"optional\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                            disabled={this.state.disabled}\r\n                        >\r\n                            Submit</Button>\r\n                    </Form>\r\n                </div>\r\n            </container>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ReactTable from 'react-table-6';\r\nimport './react-table.css';\r\nimport {Navigation} from './Navigation';\r\n\r\nexport class AnimalControlReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            DateFrom: {\r\n                YearFrom: 0,\r\n                MonthFrom: 0\r\n            },\r\n            FormAC: [],\r\n            Form60: [],\r\n            joinAC60OnMonth: [],\r\n            showACMe: false,\r\n            show60Me: false,\r\n            hideMe: false\r\n        }\r\n         this.refreshList_60 = this.refreshList_60.bind(this);\r\n         this.refreshList_ac = this.refreshList_ac.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAnimalByAC60();\r\n        //this.refreshList_60();\r\n    }\r\n\r\n    refreshList_60() {\r\n        const year = this.state.DateFrom.YearFrom;\r\n        const month = this.state.DateFrom.MonthFrom;\r\n        console.log(\"year is \" + year);\r\n        fetch(`http://localhost:4000/60AnimalDetails/${year}/${month}`)\r\n            .then(response => response.json())\r\n            .then(response => { this.setState({ Form60: response.data }) })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    refreshList_ac() {\r\n        const year = this.state.DateFrom.YearFrom;\r\n        const month = this.state.DateFrom.MonthFrom;\r\n        console.log(\"year is \" + year);\r\n        fetch(`http://localhost:4000/AcAnimalDetails/${year}/${month}`)\r\n            .then(response => response.json())\r\n            .then(response => { this.setState({ FormAC: response.data }) })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    getAnimalByAC60() {\r\n        var request = new Request(\"http://localhost:4001/joinAC60OnMonth\");\r\n        fetch(\"http://localhost:4000/joinAC60OnMonth\")\r\n            .then(response => response.json())\r\n            .then(response => { this.setState({ joinAC60OnMonth: response.data }); })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    Reveal60Form() {\r\n        this.show60Me = this.state.show60Me;\r\n    }\r\n\r\n    RevealACForm() {\r\n        this.showACMe = this.state.showACMe;\r\n    }\r\n    render() {\r\n        console.log(\"this is a click\", this.state.DateFrom)\r\n        const columns = [\r\n            {Header: \"Year\",accessor: \"year\",style: {textAlign: \"center\"},width: 60},\r\n            {Header: \"Month\",accessor: \"month\",style: {textAlign: \"center\"},width: 60},\r\n            {Header: \"Surrenderd by Animal Control Count\",accessor: \"animal_surrender_count\",style: {textAlign: \"center\"}},\r\n            {Header: \"Over 60 and Adopted Current Month Count\",accessor: \"animal_adopt_count\",style: {textAlign: \"center\"}},\r\n            {Header: 'Select Year and Month',\r\n            Cell: c => {\r\n                return (\r\n                    <Button variant=\"outline-primary\" size=\"sm\"\r\n                        onClick={() => {this.setState({DateFrom:{YearFrom: c.original.year,MonthFrom: c.original.month}})\r\n                    \r\n                    }}>Select Year & Month</Button>\r\n                )\r\n            },\r\n            style: {textAlign: \"center\"}\r\n        },  \r\n        ]\r\n\r\n        const columns_60 = [\r\n            {Header: \"Pet ID\",accessor: \"pet_ID\",style: {textAlign: \"center\"},width: 60},\r\n            {Header: \"Animal Name\",accessor: \"animal_name\",style: {textAlign: \"center\"}},\r\n            {Header: \"Animal Sex \",accessor: \"animal_surrender_count\",style: {textAlign: \"center\"}},\r\n            {Header: \"Alteration Status \",accessor: \"alteration_status\",style: {textAlign: \"center\"}, width: 140},\r\n            {Header: \"Species Type \",accessor: \"species_type\",style: {textAlign: \"center\"}},\r\n            {Header: \"Surrender Date\",accessor: \"surrender_date\",style: {textAlign: \"center\"} },\r\n            {Header: \"By Animal Control\",accessor: \"by_animal_control\",style: {textAlign: \"center\"},width: 180},\r\n            {Header: \"Microchip ID\",accessor: \"microchip_ID\",style: {textAlign: \"center\"}},\r\n            {Header: \"Breed\",accessor: \"breed\",style: {textAlign: \"center\"}}\r\n        ]\r\n\r\n        return (\r\n            [ \r\n                <Navigation\r\n                history={this.props.history}\r\n                />,\r\n                <ReactTable columns={columns}\r\n                    data={this.state.joinAC60OnMonth}\r\n                    defaultPageSize={5}\r\n                >\r\n                </ReactTable>,\r\n                <div>\r\n                        <div>\r\n                        <Button variant=\"outline-primary\" size=\"sm\"\r\n                            onClick={() => {\r\n                                this.refreshList_ac();\r\n                                this.refreshList_60();\r\n                                this.RevealACForm()\r\n                                this.setState({\r\n                                    showACMe: !this.state.showACMe\r\n                                })\r\n                            }}>Detailed info - Surrendered by Animal Control</Button>\r\n                        </div>\r\n                    <div>\r\n                       <Button variant=\"outline-primary\" size=\"sm\"\r\n                            onClick={() => {\r\n                                this.refreshList_ac();\r\n                                this.refreshList_60();\r\n                                this.Reveal60Form()\r\n                                this.setState({\r\n                                    show60Me: !this.state.show60Me\r\n                                })\r\n                                \r\n                            }}\r\n                        >Detailed info - Adopted and over 60 days</Button>\r\n                    </div>\r\n\r\n                </div>,\r\n                <div>\r\n                    {\r\n                        this.state.show60Me ?\r\n                            <div>\r\n                                <ReactTable columns={columns_60}\r\n                                    data={this.state.Form60}\r\n                                    defaultPageSize={10}\r\n                                >\r\n                                </ReactTable>,\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>,\r\n                <div>\r\n                    {\r\n                        this.state.showACMe ?\r\n                            <div>\r\n                                <ReactTable columns={columns_60}\r\n                                    data={this.state.FormAC}\r\n                                    defaultPageSize={5}\r\n                                >\r\n                                </ReactTable>,\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n            ]\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Login from './components/login';\nimport {Home} from './components/Home';\nimport {Animals} from './components/Animals';\nimport {AddAnimal} from './components/AddAnimal';\nimport {AnimalDetail} from './components/AnimalDetail';\nimport NotFoundPage from './components/404';\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport {ProtectedRoute} from './components/ProtectedRoute';\nimport {VaccineReminder} from './components/VaccineReminder';\nimport {MonthAdoptionReport} from './components/MonthAdoptionReport';\nimport {VolunteerLookup} from './components/VolunteerLookup';\nimport {VolunteerOfMonth} from './components/VolunteerOfMonth';\nimport { Adoption } from './components/Adoption'\nimport { AdoptionApplicationReview } from './components/AdoptionApplicationReview'\nimport { AddAdoptionApplication } from './components/AddAdoptionApplication'\nimport { AnimalControlReport } from './components/AnimalControlReport'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"container\">\n      <h3 className=\"m-3 d-flex justify-content-center\">\n      Shelter Management Portal\n      </h3>\n      \n      {/* <Navigation/> */}\n      <Switch>\n        <Route exact path='/' component={Login} />\n        <ProtectedRoute exact path='/home' component={Home} />\n        {/* <Route exact path='/animals' component={Animals} /> */}\n        <ProtectedRoute exact path='/animals' component={Animals} />\n        <ProtectedRoute exact path='/new-animal' component={AddAnimal} />\n        <ProtectedRoute exact path='/animal/:petid' component={AnimalDetail} />\n        <ProtectedRoute exact path='/vaccinereminder' component={VaccineReminder} />\n        <ProtectedRoute exact path='/monthadoptionreport' component={MonthAdoptionReport} />\n        <ProtectedRoute exact path='/volunteerlookup' component={VolunteerLookup} />\n        <ProtectedRoute exact path='/volunteerofmonth' component={VolunteerOfMonth} />\n        <ProtectedRoute exact path=\"/AdoptionApplicationReview\" component={AdoptionApplicationReview} />\n        <ProtectedRoute exact path=\"/Adoption\" component={Adoption} />\n        <ProtectedRoute exact path=\"/AddAdoptionApplication\" component={AddAdoptionApplication} />\n        <ProtectedRoute exact path=\"/AnimalControlReport\" component={AnimalControlReport} />\n        <ProtectedRoute exact path='/404' component={NotFoundPage} />\n        <Redirect to='/404'/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}